

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jul 07 18:02:49 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33  0000                     
    34                           ; Version 2.10
    35                           ; Generated 31/07/2019 GMT
    36                           ; 
    37                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4520 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	idataCOMRAM
    70  006EF4                     __pidataCOMRAM:
    71                           	opt callstack 0
    72                           
    73                           ;initializer for _atraso
    74  006EF4  000F               	dw	15
    75                           
    76                           ;initializer for _atraso_min
    77  006EF6  0005               	dw	5
    78                           
    79                           	psect	mediumconst
    80  007E6E                     __pmediumconst:
    81                           	opt callstack 0
    82  007E6E  00                 	db	0
    83  007E6F                     _valor:
    84                           	opt callstack 0
    85  007E6F  3F                 	db	63
    86  007E70  06                 	db	6
    87  007E71  5B                 	db	91
    88  007E72  4F                 	db	79
    89  007E73  66                 	db	102
    90  007E74  6D                 	db	109
    91  007E75  7D                 	db	125
    92  007E76  07                 	db	7
    93  007E77  7F                 	db	127
    94  007E78  6F                 	db	111
    95  007E79                     __end_of_valor:
    96                           	opt callstack 0
    97  007E79                     _valores:
    98                           	opt callstack 0
    99  007E79  3F                 	db	63
   100  007E7A  06                 	db	6
   101  007E7B  5B                 	db	91
   102  007E7C  4F                 	db	79
   103  007E7D  66                 	db	102
   104  007E7E  6D                 	db	109
   105  007E7F  7D                 	db	125
   106  007E80  07                 	db	7
   107  007E81  7F                 	db	127
   108  007E82  6F                 	db	111
   109  007E83                     __end_of_valores:
   110                           	opt callstack 0
   111  007E83                     _linha:
   112                           	opt callstack 0
   113  007E83  01                 	db	1
   114  007E84  02                 	db	2
   115  007E85  04                 	db	4
   116  007E86  00                 	db	0
   117  007E87                     __end_of_linha:
   118                           	opt callstack 0
   119  007E87                     STR_8:
   120  007E87  31                 	db	49	;'1'
   121  007E88  2D                 	db	45
   122  007E89  43                 	db	67	;'C'
   123  007E8A  61                 	db	97	;'a'
   124  007E8B  72                 	db	114	;'r'
   125  007E8C  72                 	db	114	;'r'
   126  007E8D  6F                 	db	111	;'o'
   127  007E8E  20                 	db	32
   128  007E8F  32                 	db	50	;'2'
   129  007E90  2D                 	db	45
   130  007E91  4D                 	db	77	;'M'
   131  007E92  6F                 	db	111	;'o'
   132  007E93  74                 	db	116	;'t'
   133  007E94  6F                 	db	111	;'o'
   134  007E95  20                 	db	32
   135  007E96  33                 	db	51	;'3'
   136  007E97  2D                 	db	45
   137  007E98  43                 	db	67	;'C'
   138  007E99  61                 	db	97	;'a'
   139  007E9A  6D                 	db	109	;'m'
   140  007E9B  69                 	db	105	;'i'
   141  007E9C  6E                 	db	110	;'n'
   142  007E9D  68                 	db	104	;'h'
   143  007E9E  61                 	db	97	;'a'
   144  007E9F  6F                 	db	111	;'o'
   145  007EA0  00                 	db	0
   146  007EA1                     STR_1:
   147  007EA1  31                 	db	49	;'1'
   148  007EA2  2D                 	db	45
   149  007EA3  45                 	db	69	;'E'
   150  007EA4  73                 	db	115	;'s'
   151  007EA5  63                 	db	99	;'c'
   152  007EA6  6F                 	db	111	;'o'
   153  007EA7  6C                 	db	108	;'l'
   154  007EA8  68                 	db	104	;'h'
   155  007EA9  65                 	db	101	;'e'
   156  007EAA  72                 	db	114	;'r'
   157  007EAB  20                 	db	32
   158  007EAC  6F                 	db	111	;'o'
   159  007EAD  75                 	db	117	;'u'
   160  007EAE  74                 	db	116	;'t'
   161  007EAF  72                 	db	114	;'r'
   162  007EB0  6F                 	db	111	;'o'
   163  007EB1  20                 	db	32
   164  007EB2  76                 	db	118	;'v'
   165  007EB3  65                 	db	101	;'e'
   166  007EB4  69                 	db	105	;'i'
   167  007EB5  63                 	db	99	;'c'
   168  007EB6  75                 	db	117	;'u'
   169  007EB7  6C                 	db	108	;'l'
   170  007EB8  6F                 	db	111	;'o'
   171  007EB9  00                 	db	0
   172  007EBA                     STR_5:
   173  007EBA  45                 	db	69	;'E'
   174  007EBB  78                 	db	120	;'x'
   175  007EBC  70                 	db	112	;'p'
   176  007EBD  65                 	db	101	;'e'
   177  007EBE  64                 	db	100	;'d'
   178  007EBF  69                 	db	105	;'i'
   179  007EC0  65                 	db	101	;'e'
   180  007EC1  6E                 	db	110	;'n'
   181  007EC2  74                 	db	116	;'t'
   182  007EC3  65                 	db	101	;'e'
   183  007EC4  20                 	db	32
   184  007EC5  65                 	db	101	;'e'
   185  007EC6  6E                 	db	110	;'n'
   186  007EC7  63                 	db	99	;'c'
   187  007EC8  65                 	db	101	;'e'
   188  007EC9  72                 	db	114	;'r'
   189  007ECA  72                 	db	114	;'r'
   190  007ECB  61                 	db	97	;'a'
   191  007ECC  64                 	db	100	;'d'
   192  007ECD  6F                 	db	111	;'o'
   193  007ECE  00                 	db	0
   194  007ECF                     STR_7:
   195  007ECF  45                 	db	69	;'E'
   196  007ED0  73                 	db	115	;'s'
   197  007ED1  63                 	db	99	;'c'
   198  007ED2  6F                 	db	111	;'o'
   199  007ED3  6C                 	db	108	;'l'
   200  007ED4  68                 	db	104	;'h'
   201  007ED5  61                 	db	97	;'a'
   202  007ED6  20                 	db	32
   203  007ED7  73                 	db	115	;'s'
   204  007ED8  65                 	db	101	;'e'
   205  007ED9  75                 	db	117	;'u'
   206  007EDA  20                 	db	32
   207  007EDB  76                 	db	118	;'v'
   208  007EDC  65                 	db	101	;'e'
   209  007EDD  69                 	db	105	;'i'
   210  007EDE  63                 	db	99	;'c'
   211  007EDF  75                 	db	117	;'u'
   212  007EE0  6C                 	db	108	;'l'
   213  007EE1  6F                 	db	111	;'o'
   214  007EE2  00                 	db	0
   215  007EE3                     STR_31:
   216  007EE3  72                 	db	114	;'r'
   217  007EE4  65                 	db	101	;'e'
   218  007EE5  74                 	db	116	;'t'
   219  007EE6  69                 	db	105	;'i'
   220  007EE7  72                 	db	114	;'r'
   221  007EE8  61                 	db	97	;'a'
   222  007EE9  72                 	db	114	;'r'
   223  007EEA  20                 	db	32
   224  007EEB  73                 	db	115	;'s'
   225  007EEC  65                 	db	101	;'e'
   226  007EED  75                 	db	117	;'u'
   227  007EEE  20                 	db	32
   228  007EEF  76                 	db	118	;'v'
   229  007EF0  65                 	db	101	;'e'
   230  007EF1  69                 	db	105	;'i'
   231  007EF2  63                 	db	99	;'c'
   232  007EF3  75                 	db	117	;'u'
   233  007EF4  6C                 	db	108	;'l'
   234  007EF5  6F                 	db	111	;'o'
   235  007EF6  00                 	db	0
   236  007EF7                     STR_2:
   237  007EF7  32                 	db	50	;'2'
   238  007EF8  2D                 	db	45
   239  007EF9  53                 	db	83	;'S'
   240  007EFA  61                 	db	97	;'a'
   241  007EFB  69                 	db	105	;'i'
   242  007EFC  72                 	db	114	;'r'
   243  007EFD  20                 	db	32
   244  007EFE  64                 	db	100	;'d'
   245  007EFF  6F                 	db	111	;'o'
   246  007F00  20                 	db	32
   247  007F01  6C                 	db	108	;'l'
   248  007F02  61                 	db	97	;'a'
   249  007F03  76                 	db	118	;'v'
   250  007F04  61                 	db	97	;'a'
   251  007F05  20                 	db	32
   252  007F06  6A                 	db	106	;'j'
   253  007F07  61                 	db	97	;'a'
   254  007F08  74                 	db	116	;'t'
   255  007F09  6F                 	db	111	;'o'
   256  007F0A  00                 	db	0
   257  007F0B                     STR_29:
   258  007F0B  72                 	db	114	;'r'
   259  007F0C  65                 	db	101	;'e'
   260  007F0D  74                 	db	116	;'t'
   261  007F0E  69                 	db	105	;'i'
   262  007F0F  72                 	db	114	;'r'
   263  007F10  65                 	db	101	;'e'
   264  007F11  20                 	db	32
   265  007F12  73                 	db	115	;'s'
   266  007F13  65                 	db	101	;'e'
   267  007F14  75                 	db	117	;'u'
   268  007F15  20                 	db	32
   269  007F16  76                 	db	118	;'v'
   270  007F17  65                 	db	101	;'e'
   271  007F18  69                 	db	105	;'i'
   272  007F19  63                 	db	99	;'c'
   273  007F1A  75                 	db	117	;'u'
   274  007F1B  6C                 	db	108	;'l'
   275  007F1C  6F                 	db	111	;'o'
   276  007F1D  00                 	db	0
   277  007F1E                     STR_12:
   278  007F1E  20                 	db	32
   279  007F1F  20                 	db	32
   280  007F20  20                 	db	32
   281  007F21  20                 	db	32
   282  007F22  20                 	db	32
   283  007F23  20                 	db	32
   284  007F24  20                 	db	32
   285  007F25  60                 	db	96	;'`'
   286  007F26  2D                 	db	45
   287  007F27  4F                 	db	79	;'O'
   288  007F28  2D                 	db	45
   289  007F29  2D                 	db	45
   290  007F2A  2D                 	db	45
   291  007F2B  3D                 	db	61	;'='
   292  007F2C  4F                 	db	79	;'O'
   293  007F2D  2D                 	db	45
   294  007F2E  27                 	db	39
   295  007F2F  00                 	db	0
   296  007F30                     STR_11:
   297  007F30  20                 	db	32
   298  007F31  20                 	db	32
   299  007F32  20                 	db	32
   300  007F33  20                 	db	32
   301  007F34  20                 	db	32
   302  007F35  20                 	db	32
   303  007F36  20                 	db	32
   304  007F37  5F                 	db	95	;'_'
   305  007F38  2F                 	db	47
   306  007F39  7C                 	db	124
   307  007F3A  27                 	db	39
   308  007F3B  27                 	db	39
   309  007F3C  7C                 	db	124
   310  007F3D  27                 	db	39
   311  007F3E  21                 	db	33
   312  007F3F  5F                 	db	95	;'_'
   313  007F40  2C                 	db	44
   314  007F41  00                 	db	0
   315  007F42                     STR_30:
   316  007F42  20                 	db	32
   317  007F43  50                 	db	80	;'P'
   318  007F44  72                 	db	114	;'r'
   319  007F45  65                 	db	101	;'e'
   320  007F46  73                 	db	115	;'s'
   321  007F47  73                 	db	115	;'s'
   322  007F48  69                 	db	105	;'i'
   323  007F49  6F                 	db	111	;'o'
   324  007F4A  6E                 	db	110	;'n'
   325  007F4B  65                 	db	101	;'e'
   326  007F4C  20                 	db	32
   327  007F4D  31                 	db	49	;'1'
   328  007F4E  20                 	db	32
   329  007F4F  70                 	db	112	;'p'
   330  007F50  61                 	db	97	;'a'
   331  007F51  72                 	db	114	;'r'
   332  007F52  61                 	db	97	;'a'
   333  007F53  00                 	db	0
   334  007F54                     STR_6:
   335  007F54  54                 	db	84	;'T'
   336  007F55  65                 	db	101	;'e'
   337  007F56  6E                 	db	110	;'n'
   338  007F57  68                 	db	104	;'h'
   339  007F58  61                 	db	97	;'a'
   340  007F59  20                 	db	32
   341  007F5A  75                 	db	117	;'u'
   342  007F5B  6D                 	db	109	;'m'
   343  007F5C  20                 	db	32
   344  007F5D  62                 	db	98	;'b'
   345  007F5E  6F                 	db	111	;'o'
   346  007F5F  6D                 	db	109	;'m'
   347  007F60  20                 	db	32
   348  007F61  64                 	db	100	;'d'
   349  007F62  69                 	db	105	;'i'
   350  007F63  61                 	db	97	;'a'
   351  007F64  21                 	db	33
   352  007F65  00                 	db	0
   353  007F66                     STR_15:
   354  007F66  20                 	db	32
   355  007F67  50                 	db	80	;'P'
   356  007F68  72                 	db	114	;'r'
   357  007F69  65                 	db	101	;'e'
   358  007F6A  2D                 	db	45
   359  007F6B  4C                 	db	76	;'L'
   360  007F6C  61                 	db	97	;'a'
   361  007F6D  76                 	db	118	;'v'
   362  007F6E  61                 	db	97	;'a'
   363  007F6F  67                 	db	103	;'g'
   364  007F70  65                 	db	101	;'e'
   365  007F71  6D                 	db	109	;'m'
   366  007F72  2E                 	db	46
   367  007F73  2E                 	db	46
   368  007F74  2E                 	db	46
   369  007F75  00                 	db	0
   370  007F76                     STR_9:
   371  007F76  4C                 	db	76	;'L'
   372  007F77  61                 	db	97	;'a'
   373  007F78  76                 	db	118	;'v'
   374  007F79  61                 	db	97	;'a'
   375  007F7A  20                 	db	32
   376  007F7B  52                 	db	82	;'R'
   377  007F7C  61                 	db	97	;'a'
   378  007F7D  70                 	db	112	;'p'
   379  007F7E  69                 	db	105	;'i'
   380  007F7F  64                 	db	100	;'d'
   381  007F80  6F                 	db	111	;'o'
   382  007F81  20                 	db	32
   383  007F82  48                 	db	72	;'H'
   384  007F83  6F                 	db	111	;'o'
   385  007F84  74                 	db	116	;'t'
   386  007F85  00                 	db	0
   387  007F86                     STR_3:
   388  007F86  54                 	db	84	;'T'
   389  007F87  65                 	db	101	;'e'
   390  007F88  63                 	db	99	;'c'
   391  007F89  6C                 	db	108	;'l'
   392  007F8A  61                 	db	97	;'a'
   393  007F8B  20                 	db	32
   394  007F8C  69                 	db	105	;'i'
   395  007F8D  6E                 	db	110	;'n'
   396  007F8E  76                 	db	118	;'v'
   397  007F8F  61                 	db	97	;'a'
   398  007F90  6C                 	db	108	;'l'
   399  007F91  69                 	db	105	;'i'
   400  007F92  64                 	db	100	;'d'
   401  007F93  61                 	db	97	;'a'
   402  007F94  00                 	db	0
   403  007F95                     STR_16:
   404  007F95  20                 	db	32
   405  007F96  20                 	db	32
   406  007F97  45                 	db	69	;'E'
   407  007F98  6E                 	db	110	;'n'
   408  007F99  73                 	db	115	;'s'
   409  007F9A  61                 	db	97	;'a'
   410  007F9B  62                 	db	98	;'b'
   411  007F9C  6F                 	db	111	;'o'
   412  007F9D  61                 	db	97	;'a'
   413  007F9E  6E                 	db	110	;'n'
   414  007F9F  64                 	db	100	;'d'
   415  007FA0  6F                 	db	111	;'o'
   416  007FA1  00                 	db	0
   417  007FA2                     STR_19:
   418  007FA2  20                 	db	32
   419  007FA3  20                 	db	32
   420  007FA4  45                 	db	69	;'E'
   421  007FA5  6E                 	db	110	;'n'
   422  007FA6  78                 	db	120	;'x'
   423  007FA7  61                 	db	97	;'a'
   424  007FA8  67                 	db	103	;'g'
   425  007FA9  75                 	db	117	;'u'
   426  007FAA  61                 	db	97	;'a'
   427  007FAB  6E                 	db	110	;'n'
   428  007FAC  64                 	db	100	;'d'
   429  007FAD  6F                 	db	111	;'o'
   430  007FAE  00                 	db	0
   431  007FAF                     STR_28:
   432  007FAF  20                 	db	32
   433  007FB0  20                 	db	32
   434  007FB1  20                 	db	32
   435  007FB2  50                 	db	80	;'P'
   436  007FB3  6F                 	db	111	;'o'
   437  007FB4  72                 	db	114	;'r'
   438  007FB5  20                 	db	32
   439  007FB6  66                 	db	102	;'f'
   440  007FB7  61                 	db	97	;'a'
   441  007FB8  76                 	db	118	;'v'
   442  007FB9  6F                 	db	111	;'o'
   443  007FBA  72                 	db	114	;'r'
   444  007FBB  00                 	db	0
   445  007FBC                     STR_27:
   446  007FBC  20                 	db	32
   447  007FBD  6F                 	db	111	;'o'
   448  007FBE  20                 	db	32
   449  007FBF  43                 	db	67	;'C'
   450  007FC0  61                 	db	97	;'a'
   451  007FC1  6D                 	db	109	;'m'
   452  007FC2  69                 	db	105	;'i'
   453  007FC3  6E                 	db	110	;'n'
   454  007FC4  68                 	db	104	;'h'
   455  007FC5  61                 	db	97	;'a'
   456  007FC6  6F                 	db	111	;'o'
   457  007FC7  00                 	db	0
   458  007FC8                     STR_10:
   459  007FC8  20                 	db	32
   460  007FC9  20                 	db	32
   461  007FCA  20                 	db	32
   462  007FCB  20                 	db	32
   463  007FCC  20                 	db	32
   464  007FCD  57                 	db	87	;'W'
   465  007FCE  68                 	db	104	;'h'
   466  007FCF  65                 	db	101	;'e'
   467  007FD0  65                 	db	101	;'e'
   468  007FD1  6C                 	db	108	;'l'
   469  007FD2  73                 	db	115	;'s'
   470  007FD3  00                 	db	0
   471  007FD4                     STR_22:
   472  007FD4  20                 	db	32
   473  007FD5  20                 	db	32
   474  007FD6  20                 	db	32
   475  007FD7  53                 	db	83	;'S'
   476  007FD8  65                 	db	101	;'e'
   477  007FD9  63                 	db	99	;'c'
   478  007FDA  61                 	db	97	;'a'
   479  007FDB  6E                 	db	110	;'n'
   480  007FDC  64                 	db	100	;'d'
   481  007FDD  6F                 	db	111	;'o'
   482  007FDE  00                 	db	0
   483  007FDF                     STR_13:
   484  007FDF  20                 	db	32
   485  007FE0  20                 	db	32
   486  007FE1  20                 	db	32
   487  007FE2  4C                 	db	76	;'L'
   488  007FE3  61                 	db	97	;'a'
   489  007FE4  76                 	db	118	;'v'
   490  007FE5  61                 	db	97	;'a'
   491  007FE6  6E                 	db	110	;'n'
   492  007FE7  64                 	db	100	;'d'
   493  007FE8  6F                 	db	111	;'o'
   494  007FE9  00                 	db	0
   495  007FEA                     STR_25:
   496  007FEA  20                 	db	32
   497  007FEB  6F                 	db	111	;'o'
   498  007FEC  20                 	db	32
   499  007FED  43                 	db	67	;'C'
   500  007FEE  61                 	db	97	;'a'
   501  007FEF  72                 	db	114	;'r'
   502  007FF0  72                 	db	114	;'r'
   503  007FF1  6F                 	db	111	;'o'
   504  007FF2  00                 	db	0
   505  007FF3                     STR_26:
   506  007FF3  20                 	db	32
   507  007FF4  61                 	db	97	;'a'
   508  007FF5  20                 	db	32
   509  007FF6  4D                 	db	77	;'M'
   510  007FF7  6F                 	db	111	;'o'
   511  007FF8  74                 	db	116	;'t'
   512  007FF9  6F                 	db	111	;'o'
   513  007FFA  00                 	db	0
   514  007FFB                     STR_14:
   515  007FFB  20                 	db	32
   516  007FFC  20                 	db	32
   517  007FFD  20                 	db	32
   518  007FFE  00                 	db	0
   519  0000                     
   520                           ; #config settings
   521  007FFF  00                 	db	0	; dummy byte at the end
   522  0000                     
   523                           	psect	cinit
   524  006F66                     __pcinit:
   525                           	opt callstack 0
   526  006F66                     start_initialization:
   527                           	opt callstack 0
   528  006F66                     __initialization:
   529                           	opt callstack 0
   530                           
   531                           ; Initialize objects allocated to COMRAM (4 bytes)
   532                           ; load TBLPTR registers with __pidataCOMRAM
   533  006F66  0EF4               	movlw	low __pidataCOMRAM
   534  006F68  6EF6               	movwf	tblptrl,c
   535  006F6A  0E6E               	movlw	high __pidataCOMRAM
   536  006F6C  6EF7               	movwf	tblptrh,c
   537  006F6E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   538  006F70  6EF8               	movwf	tblptru,c
   539  006F72  EE00  F03C         	lfsr	0,__pdataCOMRAM
   540  006F76  EE10 F004          	lfsr	1,4
   541  006F7A                     copy_data0:
   542  006F7A  0009               	tblrd		*+
   543  006F7C  CFF5 FFEE          	movff	tablat,postinc0
   544  006F80  50E5               	movf	postdec1,w,c
   545  006F82  50E1               	movf	fsr1l,w,c
   546  006F84  E1FA               	bnz	copy_data0
   547                           
   548                           ; Clear objects allocated to COMRAM (13 bytes)
   549  006F86  EE00  F02F         	lfsr	0,__pbssCOMRAM
   550  006F8A  0E0D               	movlw	13
   551  006F8C                     clear_0:
   552  006F8C  6AEE               	clrf	postinc0,c
   553  006F8E  06E8               	decf	wreg,f,c
   554  006F90  E1FD               	bnz	clear_0
   555  006F92                     end_of_initialization:
   556                           	opt callstack 0
   557  006F92                     __end_of__initialization:
   558                           	opt callstack 0
   559  006F92  0E00               	movlw	low (__Lmediumconst shr (0+16))
   560  006F94  6EF8               	movwf	tblptru,c
   561  006F96  0100               	movlb	0
   562  006F98  EFBE  F03C         	goto	_main	;jump to C main() function
   563                           
   564                           	psect	bssCOMRAM
   565  00002F                     __pbssCOMRAM:
   566                           	opt callstack 0
   567  00002F                     _contador:
   568                           	opt callstack 0
   569  00002F                     	ds	4
   570  000033                     _cont:
   571                           	opt callstack 0
   572  000033                     	ds	2
   573  000035                     _v3:
   574                           	opt callstack 0
   575  000035                     	ds	1
   576  000036                     _v2:
   577                           	opt callstack 0
   578  000036                     	ds	1
   579  000037                     _v1:
   580                           	opt callstack 0
   581  000037                     	ds	1
   582  000038                     _v0:
   583                           	opt callstack 0
   584  000038                     	ds	1
   585  000039                     _display:
   586                           	opt callstack 0
   587  000039                     	ds	1
   588  00003A                     _j:
   589                           	opt callstack 0
   590  00003A                     	ds	1
   591  00003B                     _i:
   592                           	opt callstack 0
   593  00003B                     	ds	1
   594                           
   595                           	psect	dataCOMRAM
   596  00003C                     __pdataCOMRAM:
   597                           	opt callstack 0
   598  00003C                     _atraso:
   599                           	opt callstack 0
   600  00003C                     	ds	2
   601  00003E                     _atraso_min:
   602                           	opt callstack 0
   603  00003E                     	ds	2
   604                           
   605                           	psect	cstackCOMRAM
   606  000001                     __pcstackCOMRAM:
   607                           	opt callstack 0
   608  000001                     ?___wmul:
   609                           	opt callstack 0
   610  000001                     ?___lldiv:
   611                           	opt callstack 0
   612  000001                     lcd_wr@val:
   613                           	opt callstack 0
   614  000001                     ___wmul@multiplier:
   615                           	opt callstack 0
   616  000001                     atraso_ms@t:
   617                           	opt callstack 0
   618  000001                     ___lldiv@dividend:
   619                           	opt callstack 0
   620                           
   621                           ; 4 bytes @ 0x0
   622  000001                     	ds	2
   623  000003                     ___wmul@multiplicand:
   624                           	opt callstack 0
   625                           
   626                           ; 2 bytes @ 0x2
   627  000003                     	ds	2
   628  000005                     ??_atraso_ms:
   629  000005                     ___wmul@product:
   630                           	opt callstack 0
   631  000005                     ___lldiv@divisor:
   632                           	opt callstack 0
   633                           
   634                           ; 4 bytes @ 0x4
   635  000005                     	ds	4
   636  000009                     atraso_ms@i:
   637                           	opt callstack 0
   638  000009                     ___lldiv@quotient:
   639                           	opt callstack 0
   640                           
   641                           ; 4 bytes @ 0x8
   642  000009                     	ds	2
   643  00000B                     atraso_ms@j:
   644                           	opt callstack 0
   645                           
   646                           ; 1 bytes @ 0xA
   647  00000B                     	ds	1
   648  00000C                     atraso_ms@k:
   649                           	opt callstack 0
   650                           
   651                           ; 1 bytes @ 0xB
   652  00000C                     	ds	1
   653  00000D                     lcd_cmd@val:
   654                           	opt callstack 0
   655  00000D                     lcd_dat@val:
   656                           	opt callstack 0
   657  00000D                     ___lldiv@counter:
   658                           	opt callstack 0
   659  00000D                     contagem@cont:
   660                           	opt callstack 0
   661  00000D                     tc_tecla@timeout:
   662                           	opt callstack 0
   663                           
   664                           ; 2 bytes @ 0xC
   665  00000D                     	ds	1
   666  00000E                     ?___llmod:
   667                           	opt callstack 0
   668  00000E                     lcd_str@str:
   669                           	opt callstack 0
   670  00000E                     shift@t:
   671                           	opt callstack 0
   672  00000E                     ___llmod@dividend:
   673                           	opt callstack 0
   674                           
   675                           ; 4 bytes @ 0xD
   676  00000E                     	ds	1
   677  00000F                     ??_contagem:
   678  00000F                     tc_tecla@to:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0xE
   682  00000F                     	ds	1
   683  000010                     ??_lcd_str:
   684  000010                     shift@op:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0xF
   688  000010                     	ds	1
   689  000011                     tc_tecla@tmp:
   690                           	opt callstack 0
   691                           
   692                           ; 1 bytes @ 0x10
   693  000011                     	ds	1
   694  000012                     lcd_str@i:
   695                           	opt callstack 0
   696  000012                     tc_tecla@ret:
   697                           	opt callstack 0
   698  000012                     ___llmod@divisor:
   699                           	opt callstack 0
   700                           
   701                           ; 4 bytes @ 0x11
   702  000012                     	ds	1
   703  000013                     tc_tecla@i:
   704                           	opt callstack 0
   705                           
   706                           ; 1 bytes @ 0x12
   707  000013                     	ds	1
   708  000014                     leituraTeclado@tmp:
   709                           	opt callstack 0
   710                           
   711                           ; 1 bytes @ 0x13
   712  000014                     	ds	2
   713  000016                     ___llmod@counter:
   714                           	opt callstack 0
   715                           
   716                           ; 1 bytes @ 0x15
   717  000016                     	ds	1
   718  000017                     tempo@inicio:
   719                           	opt callstack 0
   720                           
   721                           ; 2 bytes @ 0x16
   722  000017                     	ds	2
   723  000019                     tempo@fim:
   724                           	opt callstack 0
   725                           
   726                           ; 2 bytes @ 0x18
   727  000019                     	ds	2
   728  00001B                     ??_tempo:
   729                           
   730                           ; 1 bytes @ 0x1A
   731  00001B                     	ds	4
   732  00001F                     _tempo$884:
   733                           	opt callstack 0
   734                           
   735                           ; 4 bytes @ 0x1E
   736  00001F                     	ds	4
   737  000023                     _tempo$885:
   738                           	opt callstack 0
   739                           
   740                           ; 4 bytes @ 0x22
   741  000023                     	ds	4
   742  000027                     lavando@veiculo:
   743                           	opt callstack 0
   744                           
   745                           ; 2 bytes @ 0x26
   746  000027                     	ds	2
   747  000029                     ?_lavandoVeiculo:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x28
   751  000029                     	ds	2
   752  00002B                     lavandoVeiculo@tmp:
   753                           	opt callstack 0
   754                           
   755                           ; 1 bytes @ 0x2A
   756  00002B                     	ds	1
   757  00002C                     main@cont:
   758                           	opt callstack 0
   759                           
   760                           ; 2 bytes @ 0x2B
   761  00002C                     	ds	2
   762  00002E                     main@tmp:
   763                           	opt callstack 0
   764                           
   765                           ; 1 bytes @ 0x2D
   766  00002E                     	ds	1
   767                           
   768 ;;
   769 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   770 ;;
   771 ;; *************** function _main *****************
   772 ;; Defined at:
   773 ;;		line 3 in file "main.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  cont            2   43[COMRAM] int 
   778 ;;  i               2    0        int 
   779 ;;  tmp             1   45[COMRAM] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   789 ;;      Params:         0       0       0       0       0       0       0
   790 ;;      Locals:         3       0       0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0
   792 ;;      Totals:         3       0       0       0       0       0       0
   793 ;;Total ram usage:        3 bytes
   794 ;; Hardware stack levels required when called:    5
   795 ;; This function calls:
   796 ;;		_atraso_ms
   797 ;;		_contagem
   798 ;;		_escolherVeiculo
   799 ;;		_inicializa
   800 ;;		_intro
   801 ;;		_lavandoVeiculo
   802 ;;		_lcd_cmd
   803 ;;		_lcd_str
   804 ;;		_leituraTeclado
   805 ;;		_shift
   806 ;; This function is called by:
   807 ;;		Startup code after reset
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text0
   812  00797C                     __ptext0:
   813                           	opt callstack 0
   814  00797C                     _main:
   815                           	opt callstack 26
   816  00797C                     
   817                           ;main.c: 4:     unsigned char tmp;;main.c: 5:     int cont,i;;main.c: 6:     inicializa(
      +                          );
   818  00797C  EC8E  F037         	call	_inicializa	;wreg free
   819  007980                     
   820                           ;main.c: 7:     intro();
   821  007980  EC09  F039         	call	_intro	;wreg free
   822  007984                     l1979:
   823                           
   824                           ;main.c: 9:         (((*(volatile __near unsigned char*)0xF82)) |= (1<<1));
   825  007984  8282               	bsf	130,1,c	;volatile
   826  007986                     
   827                           ;main.c: 10:         lcd_cmd(0x01);
   828  007986  0E01               	movlw	1
   829  007988  ECEB  F037         	call	_lcd_cmd
   830  00798C                     
   831                           ;main.c: 11:         if(cont>0){
   832  00798C  BE2D               	btfsc	(main@cont+1)^0,7,c
   833  00798E  EFD1  F03C         	goto	u1131
   834  007992  502D               	movf	(main@cont+1)^0,w,c
   835  007994  E108               	bnz	u1130
   836  007996  042C               	decf	main@cont^0,w,c
   837  007998  A0D8               	btfss	status,0,c
   838  00799A  EFD1  F03C         	goto	u1131
   839  00799E  EFD3  F03C         	goto	u1130
   840  0079A2                     u1131:
   841  0079A2  EF36  F03D         	goto	l2013
   842  0079A6                     u1130:
   843  0079A6                     l1985:
   844                           
   845                           ;main.c: 13:                 lcd_str("1-Escolher outro veiculo");
   846  0079A6  0EA1               	movlw	low STR_1
   847  0079A8  6E0E               	movwf	lcd_str@str^0,c
   848  0079AA  0E7E               	movlw	high STR_1
   849  0079AC  6E0F               	movwf	(lcd_str@str+1)^0,c
   850  0079AE  EC08  F038         	call	_lcd_str	;wreg free
   851  0079B2                     
   852                           ;main.c: 14:                 lcd_cmd(0xC0);
   853  0079B2  0EC0               	movlw	192
   854  0079B4  ECEB  F037         	call	_lcd_cmd
   855  0079B8                     
   856                           ;main.c: 15:                 lcd_str("2-Sair do lava jato");
   857  0079B8  0EF7               	movlw	low STR_2
   858  0079BA  6E0E               	movwf	lcd_str@str^0,c
   859  0079BC  0E7E               	movlw	high STR_2
   860  0079BE  6E0F               	movwf	(lcd_str@str+1)^0,c
   861  0079C0  EC08  F038         	call	_lcd_str	;wreg free
   862                           
   863                           ;main.c: 16:                 shift(200,0);
   864  0079C4  0E00               	movlw	0
   865  0079C6  6E0F               	movwf	(shift@t+1)^0,c
   866  0079C8  0EC8               	movlw	200
   867  0079CA  6E0E               	movwf	shift@t^0,c
   868  0079CC  0E00               	movlw	0
   869  0079CE  6E11               	movwf	(shift@op+1)^0,c
   870  0079D0  0E00               	movlw	0
   871  0079D2  6E10               	movwf	shift@op^0,c
   872  0079D4  ECDE  F039         	call	_shift	;wreg free
   873  0079D8                     
   874                           ;main.c: 17:                 tmp=leituraTeclado();
   875  0079D8  EC80  F037         	call	_leituraTeclado	;wreg free
   876  0079DC  6E2E               	movwf	main@tmp^0,c
   877  0079DE                     
   878                           ;main.c: 18:                 if(tmp!='1' && tmp!='2'){
   879  0079DE  0E31               	movlw	49
   880  0079E0  182E               	xorwf	main@tmp^0,w,c
   881  0079E2  B4D8               	btfsc	status,2,c
   882  0079E4  EFF6  F03C         	goto	u1141
   883  0079E8  EFF8  F03C         	goto	u1140
   884  0079EC                     u1141:
   885  0079EC  EF17  F03D         	goto	l2005
   886  0079F0                     u1140:
   887  0079F0  0E32               	movlw	50
   888  0079F2  182E               	xorwf	main@tmp^0,w,c
   889  0079F4  B4D8               	btfsc	status,2,c
   890  0079F6  EFFF  F03C         	goto	u1151
   891  0079FA  EF01  F03D         	goto	u1150
   892  0079FE                     u1151:
   893  0079FE  EF17  F03D         	goto	l2005
   894  007A02                     u1150:
   895  007A02                     
   896                           ;main.c: 19:                     lcd_cmd(0x01);
   897  007A02  0E01               	movlw	1
   898  007A04  ECEB  F037         	call	_lcd_cmd
   899  007A08                     
   900                           ;main.c: 20:                     lcd_str("Tecla invalida");
   901  007A08  0E86               	movlw	low STR_3
   902  007A0A  6E0E               	movwf	lcd_str@str^0,c
   903  007A0C  0E7F               	movlw	high STR_3
   904  007A0E  6E0F               	movwf	(lcd_str@str+1)^0,c
   905  007A10  EC08  F038         	call	_lcd_str	;wreg free
   906  007A14                     
   907                           ;main.c: 21:                     atraso_ms(5000);
   908  007A14  0E88               	movlw	136
   909  007A16  6E01               	movwf	atraso_ms@t^0,c
   910  007A18  0E13               	movlw	19
   911  007A1A  6E02               	movwf	(atraso_ms@t+1)^0,c
   912  007A1C  0E00               	movlw	0
   913  007A1E  6E03               	movwf	(atraso_ms@t+2)^0,c
   914  007A20  0E00               	movlw	0
   915  007A22  6E04               	movwf	(atraso_ms@t+3)^0,c
   916  007A24  ECCD  F038         	call	_atraso_ms	;wreg free
   917  007A28                     
   918                           ;main.c: 22:                     lcd_cmd(0x01);
   919  007A28  0E01               	movlw	1
   920  007A2A  ECEB  F037         	call	_lcd_cmd
   921  007A2E                     l2005:
   922                           
   923                           ;main.c: 24:                 if(tmp=='2') goto sair;
   924  007A2E  0E32               	movlw	50
   925  007A30  182E               	xorwf	main@tmp^0,w,c
   926  007A32  A4D8               	btfss	status,2,c
   927  007A34  EF1E  F03D         	goto	u1161
   928  007A38  EF20  F03D         	goto	u1160
   929  007A3C                     u1161:
   930  007A3C  EF22  F03D         	goto	l2009
   931  007A40                     u1160:
   932  007A40  EFB4  F03D         	goto	l2049
   933  007A44                     l2009:
   934                           
   935                           ;main.c: 25:             }while(tmp!='1' && tmp!='2');
   936  007A44  0E31               	movlw	49
   937  007A46  182E               	xorwf	main@tmp^0,w,c
   938  007A48  B4D8               	btfsc	status,2,c
   939  007A4A  EF29  F03D         	goto	u1171
   940  007A4E  EF2B  F03D         	goto	u1170
   941  007A52                     u1171:
   942  007A52  EF36  F03D         	goto	l56
   943  007A56                     u1170:
   944  007A56  0E32               	movlw	50
   945  007A58  182E               	xorwf	main@tmp^0,w,c
   946  007A5A  A4D8               	btfss	status,2,c
   947  007A5C  EF32  F03D         	goto	u1181
   948  007A60  EF34  F03D         	goto	u1180
   949  007A64                     u1181:
   950  007A64  EFD3  F03C         	goto	l1985
   951  007A68                     u1180:
   952  007A68  EF36  F03D         	goto	l2013
   953  007A6C                     l56:
   954  007A6C                     l2013:
   955                           
   956                           ;main.c: 28:             escolherVeiculo();
   957  007A6C  EC30  F038         	call	_escolherVeiculo	;wreg free
   958                           
   959                           ;main.c: 29:             tmp=leituraTeclado();
   960  007A70  EC80  F037         	call	_leituraTeclado	;wreg free
   961  007A74  6E2E               	movwf	main@tmp^0,c
   962  007A76                     
   963                           ;main.c: 30:             if(tmp!='1' && tmp!='2' && tmp!='3'){
   964  007A76  0E31               	movlw	49
   965  007A78  182E               	xorwf	main@tmp^0,w,c
   966  007A7A  B4D8               	btfsc	status,2,c
   967  007A7C  EF42  F03D         	goto	u1191
   968  007A80  EF44  F03D         	goto	u1190
   969  007A84                     u1191:
   970  007A84  EF6C  F03D         	goto	l2029
   971  007A88                     u1190:
   972  007A88  0E32               	movlw	50
   973  007A8A  182E               	xorwf	main@tmp^0,w,c
   974  007A8C  B4D8               	btfsc	status,2,c
   975  007A8E  EF4B  F03D         	goto	u1201
   976  007A92  EF4D  F03D         	goto	u1200
   977  007A96                     u1201:
   978  007A96  EF6C  F03D         	goto	l2029
   979  007A9A                     u1200:
   980  007A9A  0E33               	movlw	51
   981  007A9C  182E               	xorwf	main@tmp^0,w,c
   982  007A9E  B4D8               	btfsc	status,2,c
   983  007AA0  EF54  F03D         	goto	u1211
   984  007AA4  EF56  F03D         	goto	u1210
   985  007AA8                     u1211:
   986  007AA8  EF6C  F03D         	goto	l2029
   987  007AAC                     u1210:
   988  007AAC                     
   989                           ;main.c: 31:                 lcd_cmd(0x01);
   990  007AAC  0E01               	movlw	1
   991  007AAE  ECEB  F037         	call	_lcd_cmd
   992  007AB2                     
   993                           ;main.c: 32:                 lcd_str("Tecla invalida");
   994  007AB2  0E86               	movlw	low STR_3
   995  007AB4  6E0E               	movwf	lcd_str@str^0,c
   996  007AB6  0E7F               	movlw	high STR_3
   997  007AB8  6E0F               	movwf	(lcd_str@str+1)^0,c
   998  007ABA  EC08  F038         	call	_lcd_str	;wreg free
   999  007ABE                     
  1000                           ;main.c: 33:                 atraso_ms(5000);
  1001  007ABE  0E88               	movlw	136
  1002  007AC0  6E01               	movwf	atraso_ms@t^0,c
  1003  007AC2  0E13               	movlw	19
  1004  007AC4  6E02               	movwf	(atraso_ms@t+1)^0,c
  1005  007AC6  0E00               	movlw	0
  1006  007AC8  6E03               	movwf	(atraso_ms@t+2)^0,c
  1007  007ACA  0E00               	movlw	0
  1008  007ACC  6E04               	movwf	(atraso_ms@t+3)^0,c
  1009  007ACE  ECCD  F038         	call	_atraso_ms	;wreg free
  1010  007AD2                     
  1011                           ;main.c: 34:                 lcd_cmd(0x01);
  1012  007AD2  0E01               	movlw	1
  1013  007AD4  ECEB  F037         	call	_lcd_cmd
  1014  007AD8                     l2029:
  1015                           
  1016                           ;main.c: 36:         }while(tmp!='1' && tmp!='2' && tmp!='3');
  1017  007AD8  0E31               	movlw	49
  1018  007ADA  182E               	xorwf	main@tmp^0,w,c
  1019  007ADC  B4D8               	btfsc	status,2,c
  1020  007ADE  EF73  F03D         	goto	u1221
  1021  007AE2  EF75  F03D         	goto	u1220
  1022  007AE6                     u1221:
  1023  007AE6  EF87  F03D         	goto	l2035
  1024  007AEA                     u1220:
  1025  007AEA  0E32               	movlw	50
  1026  007AEC  182E               	xorwf	main@tmp^0,w,c
  1027  007AEE  B4D8               	btfsc	status,2,c
  1028  007AF0  EF7C  F03D         	goto	u1231
  1029  007AF4  EF7E  F03D         	goto	u1230
  1030  007AF8                     u1231:
  1031  007AF8  EF87  F03D         	goto	l2035
  1032  007AFC                     u1230:
  1033  007AFC  0E33               	movlw	51
  1034  007AFE  182E               	xorwf	main@tmp^0,w,c
  1035  007B00  A4D8               	btfss	status,2,c
  1036  007B02  EF85  F03D         	goto	u1241
  1037  007B06  EF87  F03D         	goto	u1240
  1038  007B0A                     u1241:
  1039  007B0A  EF36  F03D         	goto	l2013
  1040  007B0E                     u1240:
  1041  007B0E                     l2035:
  1042                           
  1043                           ;main.c: 37:         if(cont==0) {
  1044  007B0E  502C               	movf	main@cont^0,w,c
  1045  007B10  102D               	iorwf	(main@cont+1)^0,w,c
  1046  007B12  A4D8               	btfss	status,2,c
  1047  007B14  EF8E  F03D         	goto	u1251
  1048  007B18  EF90  F03D         	goto	u1250
  1049  007B1C                     u1251:
  1050  007B1C  EF94  F03D         	goto	l2039
  1051  007B20                     u1250:
  1052  007B20                     
  1053                           ;main.c: 38:             (*(volatile __near unsigned char*)0xF93)=0x00;
  1054  007B20  0E00               	movlw	0
  1055  007B22  6E93               	movwf	147,c	;volatile
  1056                           
  1057                           ;main.c: 39:             (*(volatile __near unsigned char*)0xF81)=0x00;
  1058  007B24  0E00               	movlw	0
  1059  007B26  6E81               	movwf	129,c	;volatile
  1060  007B28                     l2039:
  1061                           
  1062                           ;main.c: 41:         cont=lavandoVeiculo(tmp);
  1063  007B28  502E               	movf	main@tmp^0,w,c
  1064  007B2A  EC4B  F03A         	call	_lavandoVeiculo
  1065  007B2E  C029  F02C         	movff	?_lavandoVeiculo,main@cont
  1066  007B32  C02A  F02D         	movff	?_lavandoVeiculo+1,main@cont+1
  1067  007B36                     
  1068                           ;main.c: 42:         contagem(cont);
  1069  007B36  C02C  F00D         	movff	main@cont,contagem@cont
  1070  007B3A  C02D  F00E         	movff	main@cont+1,contagem@cont+1
  1071  007B3E  EC5F  F038         	call	_contagem	;wreg free
  1072  007B42                     
  1073                           ;main.c: 43:         if(cont>=7){
  1074  007B42  BE2D               	btfsc	(main@cont+1)^0,7,c
  1075  007B44  EFAD  F03D         	goto	u1261
  1076  007B48  502D               	movf	(main@cont+1)^0,w,c
  1077  007B4A  E109               	bnz	u1260
  1078  007B4C  0E07               	movlw	7
  1079  007B4E  5C2C               	subwf	main@cont^0,w,c
  1080  007B50  A0D8               	btfss	status,0,c
  1081  007B52  EFAD  F03D         	goto	u1261
  1082  007B56  EFAF  F03D         	goto	u1260
  1083  007B5A                     u1261:
  1084  007B5A  EFB1  F03D         	goto	l2047
  1085  007B5E                     u1260:
  1086  007B5E  EFB4  F03D         	goto	l2049
  1087  007B62                     l2047:
  1088                           
  1089                           ;main.c: 46:         (((*(volatile __near unsigned char*)0xF82)) |= (1<<1));
  1090  007B62  8282               	bsf	130,1,c	;volatile
  1091  007B64  EFC2  F03C         	goto	l1979
  1092  007B68                     l2049:
  1093                           
  1094                           ;main.c: 49:     lcd_cmd(0x01);
  1095  007B68  0E01               	movlw	1
  1096  007B6A  ECEB  F037         	call	_lcd_cmd
  1097                           
  1098                           ;main.c: 50:     lcd_cmd(0x80);
  1099  007B6E  0E80               	movlw	128
  1100  007B70  ECEB  F037         	call	_lcd_cmd
  1101  007B74                     
  1102                           ;main.c: 51:     lcd_str("Expediente encerrado");
  1103  007B74  0EBA               	movlw	low STR_5
  1104  007B76  6E0E               	movwf	lcd_str@str^0,c
  1105  007B78  0E7E               	movlw	high STR_5
  1106  007B7A  6E0F               	movwf	(lcd_str@str+1)^0,c
  1107  007B7C  EC08  F038         	call	_lcd_str	;wreg free
  1108  007B80                     
  1109                           ;main.c: 52:     lcd_cmd(0xC0);
  1110  007B80  0EC0               	movlw	192
  1111  007B82  ECEB  F037         	call	_lcd_cmd
  1112                           
  1113                           ;main.c: 53:     lcd_str("Tenha um bom dia!");
  1114  007B86  0E54               	movlw	low STR_6
  1115  007B88  6E0E               	movwf	lcd_str@str^0,c
  1116  007B8A  0E7F               	movlw	high STR_6
  1117  007B8C  6E0F               	movwf	(lcd_str@str+1)^0,c
  1118  007B8E  EC08  F038         	call	_lcd_str	;wreg free
  1119  007B92                     
  1120                           ;main.c: 54:     shift(120,0);
  1121  007B92  0E00               	movlw	0
  1122  007B94  6E0F               	movwf	(shift@t+1)^0,c
  1123  007B96  0E78               	movlw	120
  1124  007B98  6E0E               	movwf	shift@t^0,c
  1125  007B9A  0E00               	movlw	0
  1126  007B9C  6E11               	movwf	(shift@op+1)^0,c
  1127  007B9E  0E00               	movlw	0
  1128  007BA0  6E10               	movwf	shift@op^0,c
  1129  007BA2  ECDE  F039         	call	_shift	;wreg free
  1130  007BA6                     
  1131                           ;main.c: 55:     atraso_ms(1000);
  1132  007BA6  0EE8               	movlw	232
  1133  007BA8  6E01               	movwf	atraso_ms@t^0,c
  1134  007BAA  0E03               	movlw	3
  1135  007BAC  6E02               	movwf	(atraso_ms@t+1)^0,c
  1136  007BAE  0E00               	movlw	0
  1137  007BB0  6E03               	movwf	(atraso_ms@t+2)^0,c
  1138  007BB2  0E00               	movlw	0
  1139  007BB4  6E04               	movwf	(atraso_ms@t+3)^0,c
  1140  007BB6  ECCD  F038         	call	_atraso_ms	;wreg free
  1141  007BBA                     
  1142                           ;main.c: 56:     lcd_cmd(0x01);
  1143  007BBA  0E01               	movlw	1
  1144  007BBC  ECEB  F037         	call	_lcd_cmd
  1145  007BC0                     l73:
  1146  007BC0  EFE0  F03D         	goto	l73
  1147  007BC4  EF00  F000         	goto	start
  1148  007BC8                     __end_of_main:
  1149                           	opt callstack 0
  1150                           
  1151 ;; *************** function _lavandoVeiculo *****************
  1152 ;; Defined at:
  1153 ;;		line 136 in file "lavaRapidoHW.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  tmp             1    wreg     unsigned char 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  tmp             1   42[COMRAM] unsigned char 
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  2   40[COMRAM] int 
  1160 ;; Registers used:
  1161 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1167 ;;      Params:         2       0       0       0       0       0       0
  1168 ;;      Locals:         1       0       0       0       0       0       0
  1169 ;;      Temps:          0       0       0       0       0       0       0
  1170 ;;      Totals:         3       0       0       0       0       0       0
  1171 ;;Total ram usage:        3 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; Hardware stack levels required when called:    4
  1174 ;; This function calls:
  1175 ;;		_atraso_ms
  1176 ;;		_lavando
  1177 ;;		_lcd_cmd
  1178 ;;		_lcd_str
  1179 ;;		_leituraTeclado
  1180 ;;		_shift
  1181 ;; This function is called by:
  1182 ;;		_main
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text1
  1187  007496                     __ptext1:
  1188                           	opt callstack 0
  1189  007496                     _lavandoVeiculo:
  1190                           	opt callstack 26
  1191                           
  1192                           ;incstack = 0
  1193                           ;lavandoVeiculo@tmp stored from wreg
  1194  007496  6E2B               	movwf	lavandoVeiculo@tmp^0,c
  1195  007498                     
  1196                           ;lavaRapidoHW.c: 137:     (*(volatile __near unsigned char*)0xF82)=0x00;
  1197  007498  0E00               	movlw	0
  1198  00749A  6E82               	movwf	130,c	;volatile
  1199  00749C                     
  1200                           ;lavaRapidoHW.c: 138:     (((*(volatile __near unsigned char*)0xF82)) |= (1<<1));
  1201  00749C  8282               	bsf	130,1,c	;volatile
  1202  00749E                     
  1203                           ;lavaRapidoHW.c: 139:     if(tmp=='1'){
  1204  00749E  0E31               	movlw	49
  1205  0074A0  182B               	xorwf	lavandoVeiculo@tmp^0,w,c
  1206  0074A2  A4D8               	btfss	status,2,c
  1207  0074A4  EF56  F03A         	goto	u1061
  1208  0074A8  EF58  F03A         	goto	u1060
  1209  0074AC                     u1061:
  1210  0074AC  EF5E  F03A         	goto	l1919
  1211  0074B0                     u1060:
  1212  0074B0                     
  1213                           ;lavaRapidoHW.c: 140:         lavando(" o Carro");
  1214  0074B0  0EEA               	movlw	low STR_25
  1215  0074B2  6E27               	movwf	lavando@veiculo^0,c
  1216  0074B4  0E7F               	movlw	high STR_25
  1217  0074B6  6E28               	movwf	(lavando@veiculo+1)^0,c
  1218  0074B8  ECE5  F03A         	call	_lavando	;wreg free
  1219  0074BC                     l1919:
  1220                           
  1221                           ;lavaRapidoHW.c: 142:     if(tmp=='2'){
  1222  0074BC  0E32               	movlw	50
  1223  0074BE  182B               	xorwf	lavandoVeiculo@tmp^0,w,c
  1224  0074C0  A4D8               	btfss	status,2,c
  1225  0074C2  EF65  F03A         	goto	u1071
  1226  0074C6  EF67  F03A         	goto	u1070
  1227  0074CA                     u1071:
  1228  0074CA  EF6D  F03A         	goto	l1923
  1229  0074CE                     u1070:
  1230  0074CE                     
  1231                           ;lavaRapidoHW.c: 143:         lavando(" a Moto");
  1232  0074CE  0EF3               	movlw	low STR_26
  1233  0074D0  6E27               	movwf	lavando@veiculo^0,c
  1234  0074D2  0E7F               	movlw	high STR_26
  1235  0074D4  6E28               	movwf	(lavando@veiculo+1)^0,c
  1236  0074D6  ECE5  F03A         	call	_lavando	;wreg free
  1237  0074DA                     l1923:
  1238                           
  1239                           ;lavaRapidoHW.c: 145:     if(tmp=='3'){
  1240  0074DA  0E33               	movlw	51
  1241  0074DC  182B               	xorwf	lavandoVeiculo@tmp^0,w,c
  1242  0074DE  A4D8               	btfss	status,2,c
  1243  0074E0  EF74  F03A         	goto	u1081
  1244  0074E4  EF76  F03A         	goto	u1080
  1245  0074E8                     u1081:
  1246  0074E8  EF7C  F03A         	goto	l1927
  1247  0074EC                     u1080:
  1248  0074EC                     
  1249                           ;lavaRapidoHW.c: 146:         lavando(" o Caminhao");
  1250  0074EC  0EBC               	movlw	low STR_27
  1251  0074EE  6E27               	movwf	lavando@veiculo^0,c
  1252  0074F0  0E7F               	movlw	high STR_27
  1253  0074F2  6E28               	movwf	(lavando@veiculo+1)^0,c
  1254  0074F4  ECE5  F03A         	call	_lavando	;wreg free
  1255  0074F8                     l1927:
  1256                           
  1257                           ;lavaRapidoHW.c: 148:     cont++;
  1258  0074F8  4A33               	infsnz	_cont^0,f,c
  1259  0074FA  2A34               	incf	(_cont+1)^0,f,c
  1260  0074FC                     
  1261                           ;lavaRapidoHW.c: 150:     (((*(volatile __near unsigned char*)0xF82)) &= ~(1<<1));
  1262  0074FC  9282               	bcf	130,1,c	;volatile
  1263  0074FE                     
  1264                           ;lavaRapidoHW.c: 151:     lcd_str("   Por favor");
  1265  0074FE  0EAF               	movlw	low STR_28
  1266  007500  6E0E               	movwf	lcd_str@str^0,c
  1267  007502  0E7F               	movlw	high STR_28
  1268  007504  6E0F               	movwf	(lcd_str@str+1)^0,c
  1269  007506  EC08  F038         	call	_lcd_str	;wreg free
  1270  00750A                     
  1271                           ;lavaRapidoHW.c: 152:     lcd_cmd(0xC0);
  1272  00750A  0EC0               	movlw	192
  1273  00750C  ECEB  F037         	call	_lcd_cmd
  1274  007510                     
  1275                           ;lavaRapidoHW.c: 153:     lcd_str("retire seu veiculo");
  1276  007510  0E0B               	movlw	low STR_29
  1277  007512  6E0E               	movwf	lcd_str@str^0,c
  1278  007514  0E7F               	movlw	high STR_29
  1279  007516  6E0F               	movwf	(lcd_str@str+1)^0,c
  1280  007518  EC08  F038         	call	_lcd_str	;wreg free
  1281  00751C                     
  1282                           ;lavaRapidoHW.c: 154:     shift(200,0);
  1283  00751C  0E00               	movlw	0
  1284  00751E  6E0F               	movwf	(shift@t+1)^0,c
  1285  007520  0EC8               	movlw	200
  1286  007522  6E0E               	movwf	shift@t^0,c
  1287  007524  0E00               	movlw	0
  1288  007526  6E11               	movwf	(shift@op+1)^0,c
  1289  007528  0E00               	movlw	0
  1290  00752A  6E10               	movwf	shift@op^0,c
  1291  00752C  ECDE  F039         	call	_shift	;wreg free
  1292  007530                     
  1293                           ;lavaRapidoHW.c: 155:     (((*(volatile __near unsigned char*)0xF82)) |= (1<<1));
  1294  007530  8282               	bsf	130,1,c	;volatile
  1295  007532                     
  1296                           ;lavaRapidoHW.c: 156:     lcd_cmd(0x01);
  1297  007532  0E01               	movlw	1
  1298  007534  ECEB  F037         	call	_lcd_cmd
  1299  007538                     l1943:
  1300                           
  1301                           ;lavaRapidoHW.c: 158:         lcd_str(" Pressione 1 para");
  1302  007538  0E42               	movlw	low STR_30
  1303  00753A  6E0E               	movwf	lcd_str@str^0,c
  1304  00753C  0E7F               	movlw	high STR_30
  1305  00753E  6E0F               	movwf	(lcd_str@str+1)^0,c
  1306  007540  EC08  F038         	call	_lcd_str	;wreg free
  1307  007544                     
  1308                           ;lavaRapidoHW.c: 159:         lcd_cmd(0xC0);
  1309  007544  0EC0               	movlw	192
  1310  007546  ECEB  F037         	call	_lcd_cmd
  1311  00754A                     
  1312                           ;lavaRapidoHW.c: 160:         lcd_str("retirar seu veiculo");
  1313  00754A  0EE3               	movlw	low STR_31
  1314  00754C  6E0E               	movwf	lcd_str@str^0,c
  1315  00754E  0E7E               	movlw	high STR_31
  1316  007550  6E0F               	movwf	(lcd_str@str+1)^0,c
  1317  007552  EC08  F038         	call	_lcd_str	;wreg free
  1318  007556                     
  1319                           ;lavaRapidoHW.c: 161:         shift(200,0);
  1320  007556  0E00               	movlw	0
  1321  007558  6E0F               	movwf	(shift@t+1)^0,c
  1322  00755A  0EC8               	movlw	200
  1323  00755C  6E0E               	movwf	shift@t^0,c
  1324  00755E  0E00               	movlw	0
  1325  007560  6E11               	movwf	(shift@op+1)^0,c
  1326  007562  0E00               	movlw	0
  1327  007564  6E10               	movwf	shift@op^0,c
  1328  007566  ECDE  F039         	call	_shift	;wreg free
  1329  00756A                     
  1330                           ;lavaRapidoHW.c: 162:         i=leituraTeclado();
  1331  00756A  EC80  F037         	call	_leituraTeclado	;wreg free
  1332  00756E  6E3B               	movwf	_i^0,c
  1333  007570                     
  1334                           ;lavaRapidoHW.c: 163:         if(i!='1'){
  1335  007570  0E31               	movlw	49
  1336  007572  183B               	xorwf	_i^0,w,c
  1337  007574  B4D8               	btfsc	status,2,c
  1338  007576  EFBF  F03A         	goto	u1091
  1339  00757A  EFC1  F03A         	goto	u1090
  1340  00757E                     u1091:
  1341  00757E  EFD4  F03A         	goto	l1961
  1342  007582                     u1090:
  1343  007582                     
  1344                           ;lavaRapidoHW.c: 164:             lcd_cmd(0x01);
  1345  007582  0E01               	movlw	1
  1346  007584  ECEB  F037         	call	_lcd_cmd
  1347  007588                     
  1348                           ;lavaRapidoHW.c: 165:             lcd_str("Tecla invalida");
  1349  007588  0E86               	movlw	low STR_3
  1350  00758A  6E0E               	movwf	lcd_str@str^0,c
  1351  00758C  0E7F               	movlw	high STR_3
  1352  00758E  6E0F               	movwf	(lcd_str@str+1)^0,c
  1353  007590  EC08  F038         	call	_lcd_str	;wreg free
  1354  007594                     
  1355                           ;lavaRapidoHW.c: 166:             atraso_ms(5000);
  1356  007594  0E88               	movlw	136
  1357  007596  6E01               	movwf	atraso_ms@t^0,c
  1358  007598  0E13               	movlw	19
  1359  00759A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1360  00759C  0E00               	movlw	0
  1361  00759E  6E03               	movwf	(atraso_ms@t+2)^0,c
  1362  0075A0  0E00               	movlw	0
  1363  0075A2  6E04               	movwf	(atraso_ms@t+3)^0,c
  1364  0075A4  ECCD  F038         	call	_atraso_ms	;wreg free
  1365  0075A8                     l1961:
  1366                           
  1367                           ;lavaRapidoHW.c: 168:         lcd_cmd(0x01);
  1368  0075A8  0E01               	movlw	1
  1369  0075AA  ECEB  F037         	call	_lcd_cmd
  1370  0075AE                     
  1371                           ;lavaRapidoHW.c: 169:     }while(i!='1');
  1372  0075AE  0E31               	movlw	49
  1373  0075B0  183B               	xorwf	_i^0,w,c
  1374  0075B2  A4D8               	btfss	status,2,c
  1375  0075B4  EFDE  F03A         	goto	u1101
  1376  0075B8  EFE0  F03A         	goto	u1100
  1377  0075BC                     u1101:
  1378  0075BC  EF9C  F03A         	goto	l1943
  1379  0075C0                     u1100:
  1380  0075C0                     
  1381                           ;lavaRapidoHW.c: 171:     return cont;
  1382  0075C0  C033  F029         	movff	_cont,?_lavandoVeiculo
  1383  0075C4  C034  F02A         	movff	_cont+1,?_lavandoVeiculo+1
  1384  0075C8  0012               	return		;funcret
  1385  0075CA                     __end_of_lavandoVeiculo:
  1386                           	opt callstack 0
  1387                           
  1388 ;; *************** function _leituraTeclado *****************
  1389 ;; Defined at:
  1390 ;;		line 60 in file "lavaRapidoHW.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  tmp             1   19[COMRAM] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      unsigned char 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1404 ;;      Params:         0       0       0       0       0       0       0
  1405 ;;      Locals:         1       0       0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0
  1407 ;;      Totals:         1       0       0       0       0       0       0
  1408 ;;Total ram usage:        1 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; Hardware stack levels required when called:    2
  1411 ;; This function calls:
  1412 ;;		_tc_tecla
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;;		_lavandoVeiculo
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text2
  1420  006F00                     __ptext2:
  1421                           	opt callstack 0
  1422  006F00                     _leituraTeclado:
  1423                           	opt callstack 28
  1424  006F00                     
  1425                           ;lavaRapidoHW.c: 61:     unsigned char tmp;;lavaRapidoHW.c: 62:     (*(volatile __near u
      +                          nsigned char*)0xF95) = 0x0F;
  1426  006F00  0E0F               	movlw	15
  1427  006F02  6E95               	movwf	149,c	;volatile
  1428  006F04                     
  1429                           ;lavaRapidoHW.c: 63:     tmp = tc_tecla(0) + 0x30;
  1430  006F04  0E00               	movlw	0
  1431  006F06  6E0E               	movwf	(tc_tecla@timeout+1)^0,c
  1432  006F08  0E00               	movlw	0
  1433  006F0A  6E0D               	movwf	tc_tecla@timeout^0,c
  1434  006F0C  ECC5  F03B         	call	_tc_tecla	;wreg free
  1435  006F10  0F30               	addlw	48
  1436  006F12  6E14               	movwf	leituraTeclado@tmp^0,c
  1437  006F14                     
  1438                           ;lavaRapidoHW.c: 64:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  1439  006F14  0E00               	movlw	0
  1440  006F16  6E95               	movwf	149,c	;volatile
  1441  006F18                     
  1442                           ;lavaRapidoHW.c: 65:     return tmp;
  1443  006F18  5014               	movf	leituraTeclado@tmp^0,w,c
  1444  006F1A  0012               	return		;funcret
  1445  006F1C                     __end_of_leituraTeclado:
  1446                           	opt callstack 0
  1447                           
  1448 ;; *************** function _tc_tecla *****************
  1449 ;; Defined at:
  1450 ;;		line 14 in file "teclado.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  timeout         2   12[COMRAM] unsigned int 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  to              2   14[COMRAM] unsigned int 
  1455 ;;  i               1   18[COMRAM] unsigned char 
  1456 ;;  ret             1   17[COMRAM] unsigned char 
  1457 ;;  tmp             1   16[COMRAM] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      unsigned char 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1467 ;;      Params:         2       0       0       0       0       0       0
  1468 ;;      Locals:         5       0       0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0
  1470 ;;      Totals:         7       0       0       0       0       0       0
  1471 ;;Total ram usage:        7 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    1
  1474 ;; This function calls:
  1475 ;;		_atraso_ms
  1476 ;; This function is called by:
  1477 ;;		_leituraTeclado
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text3
  1482  00778A                     __ptext3:
  1483                           	opt callstack 0
  1484  00778A                     _tc_tecla:
  1485                           	opt callstack 28
  1486  00778A                     
  1487                           ;teclado.c: 15:     unsigned int to = 0;
  1488  00778A  0E00               	movlw	0
  1489  00778C  6E10               	movwf	(tc_tecla@to+1)^0,c
  1490  00778E  0E00               	movlw	0
  1491  007790  6E0F               	movwf	tc_tecla@to^0,c
  1492                           
  1493                           ;teclado.c: 16:     unsigned char i;;teclado.c: 17:     unsigned char ret = 0;
  1494  007792  0E00               	movlw	0
  1495  007794  6E12               	movwf	tc_tecla@ret^0,c
  1496  007796                     
  1497                           ;teclado.c: 18:     unsigned char tmp = (*(volatile __near unsigned char*)0xF81);
  1498  007796  CF81 F011          	movff	3969,tc_tecla@tmp	;volatile
  1499                           
  1500                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  1501  00779A  EF8A  F03C         	goto	l1673
  1502  00779E                     l1621:
  1503                           
  1504                           ;teclado.c: 22:         for (i = 0; i < 3; i++) {
  1505  00779E  0E00               	movlw	0
  1506  0077A0  6E13               	movwf	tc_tecla@i^0,c
  1507  0077A2                     l1627:
  1508                           
  1509                           ;teclado.c: 23:             (*(volatile __near unsigned char*)0xF81) |= ~linha[i];
  1510  0077A2  0E83               	movlw	low _linha
  1511  0077A4  2413               	addwf	tc_tecla@i^0,w,c
  1512  0077A6  6EF6               	movwf	tblptrl,c
  1513  0077A8  6AF7               	clrf	tblptrh,c
  1514  0077AA  0E7E               	movlw	high _linha
  1515  0077AC  22F7               	addwfc	tblptrh,f,c
  1516  0077AE                     	if	0	;There are less than 3 active tblptr bytes
  1517  0077AE                     	endif
  1518  0077AE  0008               	tblrd		*
  1519  0077B0  50F5               	movf	tablat,w,c
  1520  0077B2  0AFF               	xorlw	255
  1521  0077B4  1281               	iorwf	129,f,c	;volatile
  1522  0077B6                     
  1523                           ;teclado.c: 24:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3))) 
      +                          {
  1524  0077B6  B683               	btfsc	131,3,c	;volatile
  1525  0077B8  EFE0  F03B         	goto	u761
  1526  0077BC  EFE2  F03B         	goto	u760
  1527  0077C0                     u761:
  1528  0077C0  EFFE  F03B         	goto	l198
  1529  0077C4                     u760:
  1530  0077C4                     
  1531                           ;teclado.c: 25:                 atraso_ms(atraso);
  1532  0077C4  0E0F               	movlw	15
  1533  0077C6  6E01               	movwf	atraso_ms@t^0,c
  1534  0077C8  0E00               	movlw	0
  1535  0077CA  6E02               	movwf	(atraso_ms@t+1)^0,c
  1536  0077CC  0E00               	movlw	0
  1537  0077CE  6E03               	movwf	(atraso_ms@t+2)^0,c
  1538  0077D0  0E00               	movlw	0
  1539  0077D2  6E04               	movwf	(atraso_ms@t+3)^0,c
  1540  0077D4  ECCD  F038         	call	_atraso_ms	;wreg free
  1541  0077D8                     
  1542                           ;teclado.c: 26:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3
      +                          ))) {
  1543  0077D8  B683               	btfsc	131,3,c	;volatile
  1544  0077DA  EFF1  F03B         	goto	u771
  1545  0077DE  EFF3  F03B         	goto	u770
  1546  0077E2                     u771:
  1547  0077E2  EFFE  F03B         	goto	l198
  1548  0077E6                     u770:
  1549  0077E6                     l200:
  1550  0077E6  A683               	btfss	131,3,c	;volatile
  1551  0077E8  EFF8  F03B         	goto	u781
  1552  0077EC  EFFA  F03B         	goto	u780
  1553  0077F0                     u781:
  1554  0077F0  EFF3  F03B         	goto	l200
  1555  0077F4                     u780:
  1556  0077F4                     
  1557                           ;teclado.c: 28:                     ret = 1 + i;
  1558  0077F4  2813               	incf	tc_tecla@i^0,w,c
  1559  0077F6  6E12               	movwf	tc_tecla@ret^0,c
  1560                           
  1561                           ;teclado.c: 29:                     break;
  1562  0077F8  EF7C  F03C         	goto	l1669
  1563  0077FC                     l198:
  1564                           
  1565                           ;teclado.c: 32:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2))) 
      +                          {
  1566  0077FC  B483               	btfsc	131,2,c	;volatile
  1567  0077FE  EF03  F03C         	goto	u791
  1568  007802  EF05  F03C         	goto	u790
  1569  007806                     u791:
  1570  007806  EF22  F03C         	goto	l203
  1571  00780A                     u790:
  1572  00780A                     
  1573                           ;teclado.c: 33:                 atraso_ms(atraso);
  1574  00780A  0E0F               	movlw	15
  1575  00780C  6E01               	movwf	atraso_ms@t^0,c
  1576  00780E  0E00               	movlw	0
  1577  007810  6E02               	movwf	(atraso_ms@t+1)^0,c
  1578  007812  0E00               	movlw	0
  1579  007814  6E03               	movwf	(atraso_ms@t+2)^0,c
  1580  007816  0E00               	movlw	0
  1581  007818  6E04               	movwf	(atraso_ms@t+3)^0,c
  1582  00781A  ECCD  F038         	call	_atraso_ms	;wreg free
  1583  00781E                     
  1584                           ;teclado.c: 34:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2
      +                          ))) {
  1585  00781E  B483               	btfsc	131,2,c	;volatile
  1586  007820  EF14  F03C         	goto	u801
  1587  007824  EF16  F03C         	goto	u800
  1588  007828                     u801:
  1589  007828  EF22  F03C         	goto	l203
  1590  00782C                     u800:
  1591  00782C                     l205:
  1592  00782C  A483               	btfss	131,2,c	;volatile
  1593  00782E  EF1B  F03C         	goto	u811
  1594  007832  EF1D  F03C         	goto	u810
  1595  007836                     u811:
  1596  007836  EF16  F03C         	goto	l205
  1597  00783A                     u810:
  1598  00783A                     
  1599                           ;teclado.c: 36:                     ret = 4 + i;
  1600  00783A  5013               	movf	tc_tecla@i^0,w,c
  1601  00783C  0F04               	addlw	4
  1602  00783E  6E12               	movwf	tc_tecla@ret^0,c
  1603                           
  1604                           ;teclado.c: 37:                     break;
  1605  007840  EF7C  F03C         	goto	l1669
  1606  007844                     l203:
  1607                           
  1608                           ;teclado.c: 40:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1))) 
      +                          {
  1609  007844  B283               	btfsc	131,1,c	;volatile
  1610  007846  EF27  F03C         	goto	u821
  1611  00784A  EF29  F03C         	goto	u820
  1612  00784E                     u821:
  1613  00784E  EF46  F03C         	goto	l208
  1614  007852                     u820:
  1615  007852                     
  1616                           ;teclado.c: 41:                 atraso_ms(atraso);
  1617  007852  0E0F               	movlw	15
  1618  007854  6E01               	movwf	atraso_ms@t^0,c
  1619  007856  0E00               	movlw	0
  1620  007858  6E02               	movwf	(atraso_ms@t+1)^0,c
  1621  00785A  0E00               	movlw	0
  1622  00785C  6E03               	movwf	(atraso_ms@t+2)^0,c
  1623  00785E  0E00               	movlw	0
  1624  007860  6E04               	movwf	(atraso_ms@t+3)^0,c
  1625  007862  ECCD  F038         	call	_atraso_ms	;wreg free
  1626  007866                     
  1627                           ;teclado.c: 42:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1
      +                          ))) {
  1628  007866  B283               	btfsc	131,1,c	;volatile
  1629  007868  EF38  F03C         	goto	u831
  1630  00786C  EF3A  F03C         	goto	u830
  1631  007870                     u831:
  1632  007870  EF46  F03C         	goto	l208
  1633  007874                     u830:
  1634  007874                     l210:
  1635  007874  A283               	btfss	131,1,c	;volatile
  1636  007876  EF3F  F03C         	goto	u841
  1637  00787A  EF41  F03C         	goto	u840
  1638  00787E                     u841:
  1639  00787E  EF3A  F03C         	goto	l210
  1640  007882                     u840:
  1641  007882                     
  1642                           ;teclado.c: 44:                     ret = 7 + i;
  1643  007882  5013               	movf	tc_tecla@i^0,w,c
  1644  007884  0F07               	addlw	7
  1645  007886  6E12               	movwf	tc_tecla@ret^0,c
  1646                           
  1647                           ;teclado.c: 45:                     break;
  1648  007888  EF7C  F03C         	goto	l1669
  1649  00788C                     l208:
  1650                           
  1651                           ;teclado.c: 48:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0))) 
      +                          {
  1652  00788C  B083               	btfsc	131,0,c	;volatile
  1653  00788E  EF4B  F03C         	goto	u851
  1654  007892  EF4D  F03C         	goto	u850
  1655  007896                     u851:
  1656  007896  EF6A  F03C         	goto	l1663
  1657  00789A                     u850:
  1658  00789A                     
  1659                           ;teclado.c: 49:                 atraso_ms(atraso);
  1660  00789A  0E0F               	movlw	15
  1661  00789C  6E01               	movwf	atraso_ms@t^0,c
  1662  00789E  0E00               	movlw	0
  1663  0078A0  6E02               	movwf	(atraso_ms@t+1)^0,c
  1664  0078A2  0E00               	movlw	0
  1665  0078A4  6E03               	movwf	(atraso_ms@t+2)^0,c
  1666  0078A6  0E00               	movlw	0
  1667  0078A8  6E04               	movwf	(atraso_ms@t+3)^0,c
  1668  0078AA  ECCD  F038         	call	_atraso_ms	;wreg free
  1669  0078AE                     
  1670                           ;teclado.c: 50:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0
      +                          ))) {
  1671  0078AE  B083               	btfsc	131,0,c	;volatile
  1672  0078B0  EF5C  F03C         	goto	u861
  1673  0078B4  EF5E  F03C         	goto	u860
  1674  0078B8                     u861:
  1675  0078B8  EF6A  F03C         	goto	l1663
  1676  0078BC                     u860:
  1677  0078BC                     l215:
  1678  0078BC  A083               	btfss	131,0,c	;volatile
  1679  0078BE  EF63  F03C         	goto	u871
  1680  0078C2  EF65  F03C         	goto	u870
  1681  0078C6                     u871:
  1682  0078C6  EF5E  F03C         	goto	l215
  1683  0078CA                     u870:
  1684  0078CA                     
  1685                           ;teclado.c: 52:                     ret = 10 + i;
  1686  0078CA  5013               	movf	tc_tecla@i^0,w,c
  1687  0078CC  0F0A               	addlw	10
  1688  0078CE  6E12               	movwf	tc_tecla@ret^0,c
  1689                           
  1690                           ;teclado.c: 53:                     break;
  1691  0078D0  EF7C  F03C         	goto	l1669
  1692  0078D4                     l1663:
  1693                           
  1694                           ;teclado.c: 56:             (*(volatile __near unsigned char*)0xF81) &= linha[i];
  1695  0078D4  0E83               	movlw	low _linha
  1696  0078D6  2413               	addwf	tc_tecla@i^0,w,c
  1697  0078D8  6EF6               	movwf	tblptrl,c
  1698  0078DA  6AF7               	clrf	tblptrh,c
  1699  0078DC  0E7E               	movlw	high _linha
  1700  0078DE  22F7               	addwfc	tblptrh,f,c
  1701  0078E0                     	if	0	;There are less than 3 active tblptr bytes
  1702  0078E0                     	endif
  1703  0078E0  0008               	tblrd		*
  1704  0078E2  50F5               	movf	tablat,w,c
  1705  0078E4  1681               	andwf	129,f,c	;volatile
  1706  0078E6                     
  1707                           ;teclado.c: 57:         };
  1708  0078E6  2A13               	incf	tc_tecla@i^0,f,c
  1709  0078E8  0E02               	movlw	2
  1710  0078EA  6413               	cpfsgt	tc_tecla@i^0,c
  1711  0078EC  EF7A  F03C         	goto	u881
  1712  0078F0  EF7C  F03C         	goto	u880
  1713  0078F4                     u881:
  1714  0078F4  EFD1  F03B         	goto	l1627
  1715  0078F8                     u880:
  1716  0078F8                     l1669:
  1717                           
  1718                           ;teclado.c: 58:         atraso_ms(atraso_min);
  1719  0078F8  0E05               	movlw	5
  1720  0078FA  6E01               	movwf	atraso_ms@t^0,c
  1721  0078FC  0E00               	movlw	0
  1722  0078FE  6E02               	movwf	(atraso_ms@t+1)^0,c
  1723  007900  0E00               	movlw	0
  1724  007902  6E03               	movwf	(atraso_ms@t+2)^0,c
  1725  007904  0E00               	movlw	0
  1726  007906  6E04               	movwf	(atraso_ms@t+3)^0,c
  1727  007908  ECCD  F038         	call	_atraso_ms	;wreg free
  1728  00790C                     
  1729                           ;teclado.c: 59:         to += 5;
  1730  00790C  0E05               	movlw	5
  1731  00790E  260F               	addwf	tc_tecla@to^0,f,c
  1732  007910  0E00               	movlw	0
  1733  007912  2210               	addwfc	(tc_tecla@to+1)^0,f,c
  1734  007914                     l1673:
  1735                           
  1736                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  1737  007914  500D               	movf	tc_tecla@timeout^0,w,c
  1738  007916  5C0F               	subwf	tc_tecla@to^0,w,c
  1739  007918  500E               	movf	(tc_tecla@timeout+1)^0,w,c
  1740  00791A  5810               	subwfb	(tc_tecla@to+1)^0,w,c
  1741  00791C  A0D8               	btfss	status,0,c
  1742  00791E  EF93  F03C         	goto	u891
  1743  007922  EF95  F03C         	goto	u890
  1744  007926                     u891:
  1745  007926  EF9E  F03C         	goto	l1677
  1746  00792A                     u890:
  1747  00792A  500D               	movf	tc_tecla@timeout^0,w,c
  1748  00792C  100E               	iorwf	(tc_tecla@timeout+1)^0,w,c
  1749  00792E  A4D8               	btfss	status,2,c
  1750  007930  EF9C  F03C         	goto	u901
  1751  007934  EF9E  F03C         	goto	u900
  1752  007938                     u901:
  1753  007938  EFA6  F03C         	goto	l1679
  1754  00793C                     u900:
  1755  00793C                     l1677:
  1756  00793C  5012               	movf	tc_tecla@ret^0,w,c
  1757  00793E  B4D8               	btfsc	status,2,c
  1758  007940  EFA4  F03C         	goto	u911
  1759  007944  EFA6  F03C         	goto	u910
  1760  007948                     u911:
  1761  007948  EFCF  F03B         	goto	l1621
  1762  00794C                     u910:
  1763  00794C                     l1679:
  1764                           
  1765                           ;teclado.c: 62:     if (!ret)ret = 255;
  1766  00794C  5012               	movf	tc_tecla@ret^0,w,c
  1767  00794E  A4D8               	btfss	status,2,c
  1768  007950  EFAC  F03C         	goto	u921
  1769  007954  EFAE  F03C         	goto	u920
  1770  007958                     u921:
  1771  007958  EFAF  F03C         	goto	l1683
  1772  00795C                     u920:
  1773  00795C  6812               	setf	tc_tecla@ret^0,c
  1774  00795E                     l1683:
  1775                           
  1776                           ;teclado.c: 63:     if (ret == 11)ret = 0;
  1777  00795E  0E0B               	movlw	11
  1778  007960  1812               	xorwf	tc_tecla@ret^0,w,c
  1779  007962  A4D8               	btfss	status,2,c
  1780  007964  EFB6  F03C         	goto	u931
  1781  007968  EFB8  F03C         	goto	u930
  1782  00796C                     u931:
  1783  00796C  EFBA  F03C         	goto	l1687
  1784  007970                     u930:
  1785  007970  0E00               	movlw	0
  1786  007972  6E12               	movwf	tc_tecla@ret^0,c
  1787  007974                     l1687:
  1788                           
  1789                           ;teclado.c: 64:     (*(volatile __near unsigned char*)0xF81) = tmp;
  1790  007974  C011  FF81         	movff	tc_tecla@tmp,3969	;volatile
  1791                           
  1792                           ;teclado.c: 65:     return ret;
  1793  007978  5012               	movf	tc_tecla@ret^0,w,c
  1794  00797A  0012               	return		;funcret
  1795  00797C                     __end_of_tc_tecla:
  1796                           	opt callstack 0
  1797                           
  1798 ;; *************** function _lavando *****************
  1799 ;; Defined at:
  1800 ;;		line 93 in file "lavaRapidoHW.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  veiculo         2   38[COMRAM] PTR unsigned char 
  1803 ;;		 -> STR_27(12), STR_26(8), STR_25(9), 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1815 ;;      Params:         2       0       0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0
  1818 ;;      Totals:         2       0       0       0       0       0       0
  1819 ;;Total ram usage:        2 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    3
  1822 ;; This function calls:
  1823 ;;		_atraso_ms
  1824 ;;		_lcd_cmd
  1825 ;;		_lcd_str
  1826 ;;		_tempo
  1827 ;; This function is called by:
  1828 ;;		_lavandoVeiculo
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text4
  1833  0075CA                     __ptext4:
  1834                           	opt callstack 0
  1835  0075CA                     _lavando:
  1836                           	opt callstack 26
  1837  0075CA                     
  1838                           ;lavaRapidoHW.c: 94:     lcd_cmd(0x01);
  1839  0075CA  0E01               	movlw	1
  1840  0075CC  ECEB  F037         	call	_lcd_cmd
  1841                           
  1842                           ;lavaRapidoHW.c: 95:     lcd_cmd(0x80);
  1843  0075D0  0E80               	movlw	128
  1844  0075D2  ECEB  F037         	call	_lcd_cmd
  1845  0075D6                     
  1846                           ;lavaRapidoHW.c: 96:     lcd_str("   Lavando");
  1847  0075D6  0EDF               	movlw	low STR_13
  1848  0075D8  6E0E               	movwf	lcd_str@str^0,c
  1849  0075DA  0E7F               	movlw	high STR_13
  1850  0075DC  6E0F               	movwf	(lcd_str@str+1)^0,c
  1851  0075DE  EC08  F038         	call	_lcd_str	;wreg free
  1852  0075E2                     
  1853                           ;lavaRapidoHW.c: 97:     lcd_cmd(0xC0);
  1854  0075E2  0EC0               	movlw	192
  1855  0075E4  ECEB  F037         	call	_lcd_cmd
  1856                           
  1857                           ;lavaRapidoHW.c: 98:     lcd_str("   ");
  1858  0075E8  0EFB               	movlw	low STR_14
  1859  0075EA  6E0E               	movwf	lcd_str@str^0,c
  1860  0075EC  0E7F               	movlw	high STR_14
  1861  0075EE  6E0F               	movwf	(lcd_str@str+1)^0,c
  1862  0075F0  EC08  F038         	call	_lcd_str	;wreg free
  1863                           
  1864                           ;lavaRapidoHW.c: 99:     lcd_str(veiculo);
  1865  0075F4  C027  F00E         	movff	lavando@veiculo,lcd_str@str
  1866  0075F8  C028  F00F         	movff	lavando@veiculo+1,lcd_str@str+1
  1867  0075FC  EC08  F038         	call	_lcd_str	;wreg free
  1868  007600                     
  1869                           ;lavaRapidoHW.c: 100:     atraso_ms(1000);
  1870  007600  0EE8               	movlw	232
  1871  007602  6E01               	movwf	atraso_ms@t^0,c
  1872  007604  0E03               	movlw	3
  1873  007606  6E02               	movwf	(atraso_ms@t+1)^0,c
  1874  007608  0E00               	movlw	0
  1875  00760A  6E03               	movwf	(atraso_ms@t+2)^0,c
  1876  00760C  0E00               	movlw	0
  1877  00760E  6E04               	movwf	(atraso_ms@t+3)^0,c
  1878  007610  ECCD  F038         	call	_atraso_ms	;wreg free
  1879  007614                     
  1880                           ;lavaRapidoHW.c: 101:     lcd_cmd(0x01);
  1881  007614  0E01               	movlw	1
  1882  007616  ECEB  F037         	call	_lcd_cmd
  1883                           
  1884                           ;lavaRapidoHW.c: 102:     lcd_str(" Pre-Lavagem...");
  1885  00761A  0E66               	movlw	low STR_15
  1886  00761C  6E0E               	movwf	lcd_str@str^0,c
  1887  00761E  0E7F               	movlw	high STR_15
  1888  007620  6E0F               	movwf	(lcd_str@str+1)^0,c
  1889  007622  EC08  F038         	call	_lcd_str	;wreg free
  1890  007626                     
  1891                           ;lavaRapidoHW.c: 103:     tempo(60,45);
  1892  007626  0E00               	movlw	0
  1893  007628  6E18               	movwf	(tempo@inicio+1)^0,c
  1894  00762A  0E3C               	movlw	60
  1895  00762C  6E17               	movwf	tempo@inicio^0,c
  1896  00762E  0E00               	movlw	0
  1897  007630  6E1A               	movwf	(tempo@fim+1)^0,c
  1898  007632  0E2D               	movlw	45
  1899  007634  6E19               	movwf	tempo@fim^0,c
  1900  007636  ECE4  F03D         	call	_tempo	;wreg free
  1901  00763A                     
  1902                           ;lavaRapidoHW.c: 104:     lcd_cmd(0x01);
  1903  00763A  0E01               	movlw	1
  1904  00763C  ECEB  F037         	call	_lcd_cmd
  1905  007640                     
  1906                           ;lavaRapidoHW.c: 105:     lcd_str("  Ensaboando");
  1907  007640  0E95               	movlw	low STR_16
  1908  007642  6E0E               	movwf	lcd_str@str^0,c
  1909  007644  0E7F               	movlw	high STR_16
  1910  007646  6E0F               	movwf	(lcd_str@str+1)^0,c
  1911  007648  EC08  F038         	call	_lcd_str	;wreg free
  1912  00764C                     
  1913                           ;lavaRapidoHW.c: 106:     lcd_cmd(0xC0);
  1914  00764C  0EC0               	movlw	192
  1915  00764E  ECEB  F037         	call	_lcd_cmd
  1916  007652                     
  1917                           ;lavaRapidoHW.c: 107:     lcd_str("   ");
  1918  007652  0EFB               	movlw	low STR_14
  1919  007654  6E0E               	movwf	lcd_str@str^0,c
  1920  007656  0E7F               	movlw	high STR_14
  1921  007658  6E0F               	movwf	(lcd_str@str+1)^0,c
  1922  00765A  EC08  F038         	call	_lcd_str	;wreg free
  1923  00765E                     
  1924                           ;lavaRapidoHW.c: 108:     lcd_str(veiculo);
  1925  00765E  C027  F00E         	movff	lavando@veiculo,lcd_str@str
  1926  007662  C028  F00F         	movff	lavando@veiculo+1,lcd_str@str+1
  1927  007666  EC08  F038         	call	_lcd_str	;wreg free
  1928  00766A                     
  1929                           ;lavaRapidoHW.c: 109:     lcd_str("...");
  1930  00766A  0E72               	movlw	low (STR_15+12)
  1931  00766C  6E0E               	movwf	lcd_str@str^0,c
  1932  00766E  0E7F               	movlw	high (STR_15+12)
  1933  007670  6E0F               	movwf	(lcd_str@str+1)^0,c
  1934  007672  EC08  F038         	call	_lcd_str	;wreg free
  1935  007676                     
  1936                           ;lavaRapidoHW.c: 110:     atraso_ms(50);
  1937  007676  0E32               	movlw	50
  1938  007678  6E01               	movwf	atraso_ms@t^0,c
  1939  00767A  0E00               	movlw	0
  1940  00767C  6E02               	movwf	(atraso_ms@t+1)^0,c
  1941  00767E  0E00               	movlw	0
  1942  007680  6E03               	movwf	(atraso_ms@t+2)^0,c
  1943  007682  0E00               	movlw	0
  1944  007684  6E04               	movwf	(atraso_ms@t+3)^0,c
  1945  007686  ECCD  F038         	call	_atraso_ms	;wreg free
  1946  00768A                     
  1947                           ;lavaRapidoHW.c: 111:     tempo(45,30);
  1948  00768A  0E00               	movlw	0
  1949  00768C  6E18               	movwf	(tempo@inicio+1)^0,c
  1950  00768E  0E2D               	movlw	45
  1951  007690  6E17               	movwf	tempo@inicio^0,c
  1952  007692  0E00               	movlw	0
  1953  007694  6E1A               	movwf	(tempo@fim+1)^0,c
  1954  007696  0E1E               	movlw	30
  1955  007698  6E19               	movwf	tempo@fim^0,c
  1956  00769A  ECE4  F03D         	call	_tempo	;wreg free
  1957  00769E                     
  1958                           ;lavaRapidoHW.c: 112:     lcd_cmd(0x01);
  1959  00769E  0E01               	movlw	1
  1960  0076A0  ECEB  F037         	call	_lcd_cmd
  1961  0076A4                     
  1962                           ;lavaRapidoHW.c: 113:     lcd_cmd(0x80);
  1963  0076A4  0E80               	movlw	128
  1964  0076A6  ECEB  F037         	call	_lcd_cmd
  1965  0076AA                     
  1966                           ;lavaRapidoHW.c: 114:     lcd_str("  Enxaguando");
  1967  0076AA  0EA2               	movlw	low STR_19
  1968  0076AC  6E0E               	movwf	lcd_str@str^0,c
  1969  0076AE  0E7F               	movlw	high STR_19
  1970  0076B0  6E0F               	movwf	(lcd_str@str+1)^0,c
  1971  0076B2  EC08  F038         	call	_lcd_str	;wreg free
  1972                           
  1973                           ;lavaRapidoHW.c: 115:     lcd_cmd(0xC0);
  1974  0076B6  0EC0               	movlw	192
  1975  0076B8  ECEB  F037         	call	_lcd_cmd
  1976  0076BC                     
  1977                           ;lavaRapidoHW.c: 116:     lcd_str("   ");
  1978  0076BC  0EFB               	movlw	low STR_14
  1979  0076BE  6E0E               	movwf	lcd_str@str^0,c
  1980  0076C0  0E7F               	movlw	high STR_14
  1981  0076C2  6E0F               	movwf	(lcd_str@str+1)^0,c
  1982  0076C4  EC08  F038         	call	_lcd_str	;wreg free
  1983  0076C8                     
  1984                           ;lavaRapidoHW.c: 117:     lcd_str(veiculo);
  1985  0076C8  C027  F00E         	movff	lavando@veiculo,lcd_str@str
  1986  0076CC  C028  F00F         	movff	lavando@veiculo+1,lcd_str@str+1
  1987  0076D0  EC08  F038         	call	_lcd_str	;wreg free
  1988  0076D4                     
  1989                           ;lavaRapidoHW.c: 118:     lcd_str("...");
  1990  0076D4  0E72               	movlw	low (STR_15+12)
  1991  0076D6  6E0E               	movwf	lcd_str@str^0,c
  1992  0076D8  0E7F               	movlw	high (STR_15+12)
  1993  0076DA  6E0F               	movwf	(lcd_str@str+1)^0,c
  1994  0076DC  EC08  F038         	call	_lcd_str	;wreg free
  1995  0076E0                     
  1996                           ;lavaRapidoHW.c: 119:     atraso_ms(50);
  1997  0076E0  0E32               	movlw	50
  1998  0076E2  6E01               	movwf	atraso_ms@t^0,c
  1999  0076E4  0E00               	movlw	0
  2000  0076E6  6E02               	movwf	(atraso_ms@t+1)^0,c
  2001  0076E8  0E00               	movlw	0
  2002  0076EA  6E03               	movwf	(atraso_ms@t+2)^0,c
  2003  0076EC  0E00               	movlw	0
  2004  0076EE  6E04               	movwf	(atraso_ms@t+3)^0,c
  2005  0076F0  ECCD  F038         	call	_atraso_ms	;wreg free
  2006  0076F4                     
  2007                           ;lavaRapidoHW.c: 120:     tempo(30,15);
  2008  0076F4  0E00               	movlw	0
  2009  0076F6  6E18               	movwf	(tempo@inicio+1)^0,c
  2010  0076F8  0E1E               	movlw	30
  2011  0076FA  6E17               	movwf	tempo@inicio^0,c
  2012  0076FC  0E00               	movlw	0
  2013  0076FE  6E1A               	movwf	(tempo@fim+1)^0,c
  2014  007700  0E0F               	movlw	15
  2015  007702  6E19               	movwf	tempo@fim^0,c
  2016  007704  ECE4  F03D         	call	_tempo	;wreg free
  2017  007708                     
  2018                           ;lavaRapidoHW.c: 121:     lcd_cmd(0x01);
  2019  007708  0E01               	movlw	1
  2020  00770A  ECEB  F037         	call	_lcd_cmd
  2021  00770E                     
  2022                           ;lavaRapidoHW.c: 122:     lcd_cmd(0x80);
  2023  00770E  0E80               	movlw	128
  2024  007710  ECEB  F037         	call	_lcd_cmd
  2025  007714                     
  2026                           ;lavaRapidoHW.c: 123:     lcd_str("   Secando");
  2027  007714  0ED4               	movlw	low STR_22
  2028  007716  6E0E               	movwf	lcd_str@str^0,c
  2029  007718  0E7F               	movlw	high STR_22
  2030  00771A  6E0F               	movwf	(lcd_str@str+1)^0,c
  2031  00771C  EC08  F038         	call	_lcd_str	;wreg free
  2032  007720                     
  2033                           ;lavaRapidoHW.c: 124:     lcd_cmd(0xC0);
  2034  007720  0EC0               	movlw	192
  2035  007722  ECEB  F037         	call	_lcd_cmd
  2036  007726                     
  2037                           ;lavaRapidoHW.c: 125:     lcd_str("   ");
  2038  007726  0EFB               	movlw	low STR_14
  2039  007728  6E0E               	movwf	lcd_str@str^0,c
  2040  00772A  0E7F               	movlw	high STR_14
  2041  00772C  6E0F               	movwf	(lcd_str@str+1)^0,c
  2042  00772E  EC08  F038         	call	_lcd_str	;wreg free
  2043  007732                     
  2044                           ;lavaRapidoHW.c: 126:     lcd_str(veiculo);
  2045  007732  C027  F00E         	movff	lavando@veiculo,lcd_str@str
  2046  007736  C028  F00F         	movff	lavando@veiculo+1,lcd_str@str+1
  2047  00773A  EC08  F038         	call	_lcd_str	;wreg free
  2048  00773E                     
  2049                           ;lavaRapidoHW.c: 127:     lcd_str("...");
  2050  00773E  0E72               	movlw	low (STR_15+12)
  2051  007740  6E0E               	movwf	lcd_str@str^0,c
  2052  007742  0E7F               	movlw	high (STR_15+12)
  2053  007744  6E0F               	movwf	(lcd_str@str+1)^0,c
  2054  007746  EC08  F038         	call	_lcd_str	;wreg free
  2055  00774A                     
  2056                           ;lavaRapidoHW.c: 128:     (((*(volatile __near unsigned char*)0xF82)) |= (1<<2));
  2057  00774A  8482               	bsf	130,2,c	;volatile
  2058  00774C                     
  2059                           ;lavaRapidoHW.c: 129:     atraso_ms(50);
  2060  00774C  0E32               	movlw	50
  2061  00774E  6E01               	movwf	atraso_ms@t^0,c
  2062  007750  0E00               	movlw	0
  2063  007752  6E02               	movwf	(atraso_ms@t+1)^0,c
  2064  007754  0E00               	movlw	0
  2065  007756  6E03               	movwf	(atraso_ms@t+2)^0,c
  2066  007758  0E00               	movlw	0
  2067  00775A  6E04               	movwf	(atraso_ms@t+3)^0,c
  2068  00775C  ECCD  F038         	call	_atraso_ms	;wreg free
  2069  007760                     
  2070                           ;lavaRapidoHW.c: 130:     tempo(15,0);
  2071  007760  0E00               	movlw	0
  2072  007762  6E18               	movwf	(tempo@inicio+1)^0,c
  2073  007764  0E0F               	movlw	15
  2074  007766  6E17               	movwf	tempo@inicio^0,c
  2075  007768  0E00               	movlw	0
  2076  00776A  6E1A               	movwf	(tempo@fim+1)^0,c
  2077  00776C  0E00               	movlw	0
  2078  00776E  6E19               	movwf	tempo@fim^0,c
  2079  007770  ECE4  F03D         	call	_tempo	;wreg free
  2080  007774                     
  2081                           ;lavaRapidoHW.c: 131:     lcd_cmd(0x01);
  2082  007774  0E01               	movlw	1
  2083  007776  ECEB  F037         	call	_lcd_cmd
  2084  00777A                     
  2085                           ;lavaRapidoHW.c: 132:     lcd_cmd(0x80);
  2086  00777A  0E80               	movlw	128
  2087  00777C  ECEB  F037         	call	_lcd_cmd
  2088  007780                     
  2089                           ;lavaRapidoHW.c: 133:     (((*(volatile __near unsigned char*)0xF82)) &= ~(1<<2));
  2090  007780  9482               	bcf	130,2,c	;volatile
  2091  007782                     
  2092                           ;lavaRapidoHW.c: 134:     lcd_cmd(0x01);
  2093  007782  0E01               	movlw	1
  2094  007784  ECEB  F037         	call	_lcd_cmd
  2095  007788  0012               	return		;funcret
  2096  00778A                     __end_of_lavando:
  2097                           	opt callstack 0
  2098                           
  2099 ;; *************** function _tempo *****************
  2100 ;; Defined at:
  2101 ;;		line 67 in file "lavaRapidoHW.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  inicio          2   22[COMRAM] int 
  2104 ;;  fim             2   24[COMRAM] int 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2116 ;;      Params:         4       0       0       0       0       0       0
  2117 ;;      Locals:         8       0       0       0       0       0       0
  2118 ;;      Temps:          4       0       0       0       0       0       0
  2119 ;;      Totals:        16       0       0       0       0       0       0
  2120 ;;Total ram usage:       16 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    1
  2123 ;; This function calls:
  2124 ;;		___lldiv
  2125 ;;		___llmod
  2126 ;;		___wmul
  2127 ;;		_atraso_ms
  2128 ;; This function is called by:
  2129 ;;		_lavando
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text5
  2134  007BC8                     __ptext5:
  2135                           	opt callstack 0
  2136  007BC8                     _tempo:
  2137                           	opt callstack 27
  2138  007BC8                     
  2139                           ;lavaRapidoHW.c: 68:     (*(volatile __near unsigned char*)0xF83)=0x00;
  2140  007BC8  0E00               	movlw	0
  2141  007BCA  6E83               	movwf	131,c	;volatile
  2142  007BCC                     
  2143                           ;lavaRapidoHW.c: 69:     contador=inicio*60;
  2144  007BCC  C017  F001         	movff	tempo@inicio,___wmul@multiplier
  2145  007BD0  C018  F002         	movff	tempo@inicio+1,___wmul@multiplier+1
  2146  007BD4  0E00               	movlw	0
  2147  007BD6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2148  007BD8  0E3C               	movlw	60
  2149  007BDA  6E03               	movwf	___wmul@multiplicand^0,c
  2150  007BDC  ECA0  F037         	call	___wmul	;wreg free
  2151  007BE0  C001  F02F         	movff	?___wmul,_contador
  2152  007BE4  C002  F030         	movff	?___wmul+1,_contador+1
  2153  007BE8  0E00               	movlw	0
  2154  007BEA  BE30               	btfsc	(_contador+1)^0,7,c
  2155  007BEC  0EFF               	movlw	-1
  2156  007BEE  6E31               	movwf	(_contador+2)^0,c
  2157  007BF0  6E32               	movwf	(_contador+3)^0,c
  2158  007BF2                     l1695:
  2159                           
  2160                           ;lavaRapidoHW.c: 71:         for(i=2;i<6;i++){
  2161  007BF2  0E02               	movlw	2
  2162  007BF4  6E3B               	movwf	_i^0,c
  2163  007BF6                     l1697:
  2164  007BF6  0E05               	movlw	5
  2165  007BF8  643B               	cpfsgt	_i^0,c
  2166  007BFA  EF01  F03E         	goto	u941
  2167  007BFE  EF03  F03E         	goto	u940
  2168  007C02                     u941:
  2169  007C02  EF05  F03E         	goto	l1701
  2170  007C06                     u940:
  2171  007C06  EF0A  F03F         	goto	l1731
  2172  007C0A                     l1701:
  2173                           
  2174                           ;lavaRapidoHW.c: 72:             if(i==2) (*(volatile __near unsigned char*)0xF83)=valor
      +                          es[(contador/60)/10];
  2175  007C0A  0E02               	movlw	2
  2176  007C0C  183B               	xorwf	_i^0,w,c
  2177  007C0E  A4D8               	btfss	status,2,c
  2178  007C10  EF0C  F03E         	goto	u951
  2179  007C14  EF0E  F03E         	goto	u950
  2180  007C18                     u951:
  2181  007C18  EF43  F03E         	goto	l1707
  2182  007C1C                     u950:
  2183  007C1C  0E3C               	movlw	60
  2184  007C1E  6E05               	movwf	___lldiv@divisor^0,c
  2185  007C20  0E00               	movlw	0
  2186  007C22  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2187  007C24  0E00               	movlw	0
  2188  007C26  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2189  007C28  0E00               	movlw	0
  2190  007C2A  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2191  007C2C  C02F  F001         	movff	_contador,___lldiv@dividend
  2192  007C30  C030  F002         	movff	_contador+1,___lldiv@dividend+1
  2193  007C34  C031  F003         	movff	_contador+2,___lldiv@dividend+2
  2194  007C38  C032  F004         	movff	_contador+3,___lldiv@dividend+3
  2195  007C3C  EC8C  F039         	call	___lldiv	;wreg free
  2196  007C40  C001  F01F         	movff	?___lldiv,_tempo$884
  2197  007C44  C002  F020         	movff	?___lldiv+1,_tempo$884+1
  2198  007C48  C003  F021         	movff	?___lldiv+2,_tempo$884+2
  2199  007C4C  C004  F022         	movff	?___lldiv+3,_tempo$884+3
  2200  007C50  C01F  F001         	movff	_tempo$884,___lldiv@dividend
  2201  007C54  C020  F002         	movff	_tempo$884+1,___lldiv@dividend+1
  2202  007C58  C021  F003         	movff	_tempo$884+2,___lldiv@dividend+2
  2203  007C5C  C022  F004         	movff	_tempo$884+3,___lldiv@dividend+3
  2204  007C60  0E0A               	movlw	10
  2205  007C62  6E05               	movwf	___lldiv@divisor^0,c
  2206  007C64  0E00               	movlw	0
  2207  007C66  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2208  007C68  0E00               	movlw	0
  2209  007C6A  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2210  007C6C  0E00               	movlw	0
  2211  007C6E  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2212  007C70  EC8C  F039         	call	___lldiv	;wreg free
  2213  007C74  0E79               	movlw	low _valores
  2214  007C76  2401               	addwf	?___lldiv^0,w,c
  2215  007C78  6EF6               	movwf	tblptrl,c
  2216  007C7A  0E7E               	movlw	high _valores
  2217  007C7C  2002               	addwfc	(?___lldiv+1)^0,w,c
  2218  007C7E  6EF7               	movwf	tblptrh,c
  2219  007C80                     	if	0	;There are less than 3 active tblptr bytes
  2220  007C80                     	endif
  2221  007C80  0008               	tblrd		*
  2222  007C82  CFF5 FF83          	movff	tablat,3971	;volatile
  2223  007C86                     l1707:
  2224                           
  2225                           ;lavaRapidoHW.c: 73:             if(i==3) (*(volatile __near unsigned char*)0xF83)=valor
      +                          es[(contador/60)%10];
  2226  007C86  0E03               	movlw	3
  2227  007C88  183B               	xorwf	_i^0,w,c
  2228  007C8A  A4D8               	btfss	status,2,c
  2229  007C8C  EF4A  F03E         	goto	u961
  2230  007C90  EF4C  F03E         	goto	u960
  2231  007C94                     u961:
  2232  007C94  EF79  F03E         	goto	l1711
  2233  007C98                     u960:
  2234  007C98  0E3C               	movlw	60
  2235  007C9A  6E05               	movwf	___lldiv@divisor^0,c
  2236  007C9C  0E00               	movlw	0
  2237  007C9E  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2238  007CA0  0E00               	movlw	0
  2239  007CA2  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2240  007CA4  0E00               	movlw	0
  2241  007CA6  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2242  007CA8  C02F  F001         	movff	_contador,___lldiv@dividend
  2243  007CAC  C030  F002         	movff	_contador+1,___lldiv@dividend+1
  2244  007CB0  C031  F003         	movff	_contador+2,___lldiv@dividend+2
  2245  007CB4  C032  F004         	movff	_contador+3,___lldiv@dividend+3
  2246  007CB8  EC8C  F039         	call	___lldiv	;wreg free
  2247  007CBC  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2248  007CC0  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2249  007CC4  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2250  007CC8  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2251  007CCC  0E0A               	movlw	10
  2252  007CCE  6E12               	movwf	___llmod@divisor^0,c
  2253  007CD0  0E00               	movlw	0
  2254  007CD2  6E13               	movwf	(___llmod@divisor+1)^0,c
  2255  007CD4  0E00               	movlw	0
  2256  007CD6  6E14               	movwf	(___llmod@divisor+2)^0,c
  2257  007CD8  0E00               	movlw	0
  2258  007CDA  6E15               	movwf	(___llmod@divisor+3)^0,c
  2259  007CDC  EC48  F039         	call	___llmod	;wreg free
  2260  007CE0  0E79               	movlw	low _valores
  2261  007CE2  240E               	addwf	?___llmod^0,w,c
  2262  007CE4  6EF6               	movwf	tblptrl,c
  2263  007CE6  0E7E               	movlw	high _valores
  2264  007CE8  200F               	addwfc	(?___llmod+1)^0,w,c
  2265  007CEA  6EF7               	movwf	tblptrh,c
  2266  007CEC                     	if	0	;There are less than 3 active tblptr bytes
  2267  007CEC                     	endif
  2268  007CEC  0008               	tblrd		*
  2269  007CEE  CFF5 FF83          	movff	tablat,3971	;volatile
  2270  007CF2                     l1711:
  2271                           
  2272                           ;lavaRapidoHW.c: 74:             if(i==4) (*(volatile __near unsigned char*)0xF83)=valor
      +                          es[(contador%60)/10];
  2273  007CF2  0E04               	movlw	4
  2274  007CF4  183B               	xorwf	_i^0,w,c
  2275  007CF6  A4D8               	btfss	status,2,c
  2276  007CF8  EF80  F03E         	goto	u971
  2277  007CFC  EF82  F03E         	goto	u970
  2278  007D00                     u971:
  2279  007D00  EFAF  F03E         	goto	l1715
  2280  007D04                     u970:
  2281  007D04  0E3C               	movlw	60
  2282  007D06  6E12               	movwf	___llmod@divisor^0,c
  2283  007D08  0E00               	movlw	0
  2284  007D0A  6E13               	movwf	(___llmod@divisor+1)^0,c
  2285  007D0C  0E00               	movlw	0
  2286  007D0E  6E14               	movwf	(___llmod@divisor+2)^0,c
  2287  007D10  0E00               	movlw	0
  2288  007D12  6E15               	movwf	(___llmod@divisor+3)^0,c
  2289  007D14  C02F  F00E         	movff	_contador,___llmod@dividend
  2290  007D18  C030  F00F         	movff	_contador+1,___llmod@dividend+1
  2291  007D1C  C031  F010         	movff	_contador+2,___llmod@dividend+2
  2292  007D20  C032  F011         	movff	_contador+3,___llmod@dividend+3
  2293  007D24  EC48  F039         	call	___llmod	;wreg free
  2294  007D28  C00E  F001         	movff	?___llmod,___lldiv@dividend
  2295  007D2C  C00F  F002         	movff	?___llmod+1,___lldiv@dividend+1
  2296  007D30  C010  F003         	movff	?___llmod+2,___lldiv@dividend+2
  2297  007D34  C011  F004         	movff	?___llmod+3,___lldiv@dividend+3
  2298  007D38  0E0A               	movlw	10
  2299  007D3A  6E05               	movwf	___lldiv@divisor^0,c
  2300  007D3C  0E00               	movlw	0
  2301  007D3E  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2302  007D40  0E00               	movlw	0
  2303  007D42  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2304  007D44  0E00               	movlw	0
  2305  007D46  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2306  007D48  EC8C  F039         	call	___lldiv	;wreg free
  2307  007D4C  0E79               	movlw	low _valores
  2308  007D4E  2401               	addwf	?___lldiv^0,w,c
  2309  007D50  6EF6               	movwf	tblptrl,c
  2310  007D52  0E7E               	movlw	high _valores
  2311  007D54  2002               	addwfc	(?___lldiv+1)^0,w,c
  2312  007D56  6EF7               	movwf	tblptrh,c
  2313  007D58                     	if	0	;There are less than 3 active tblptr bytes
  2314  007D58                     	endif
  2315  007D58  0008               	tblrd		*
  2316  007D5A  CFF5 FF83          	movff	tablat,3971	;volatile
  2317  007D5E                     l1715:
  2318                           
  2319                           ;lavaRapidoHW.c: 75:             if(i==5) (*(volatile __near unsigned char*)0xF83)=valor
      +                          es[(contador%60)%10];
  2320  007D5E  0E05               	movlw	5
  2321  007D60  183B               	xorwf	_i^0,w,c
  2322  007D62  A4D8               	btfss	status,2,c
  2323  007D64  EFB6  F03E         	goto	u981
  2324  007D68  EFB8  F03E         	goto	u980
  2325  007D6C                     u981:
  2326  007D6C  EFED  F03E         	goto	l1721
  2327  007D70                     u980:
  2328  007D70  0E3C               	movlw	60
  2329  007D72  6E12               	movwf	___llmod@divisor^0,c
  2330  007D74  0E00               	movlw	0
  2331  007D76  6E13               	movwf	(___llmod@divisor+1)^0,c
  2332  007D78  0E00               	movlw	0
  2333  007D7A  6E14               	movwf	(___llmod@divisor+2)^0,c
  2334  007D7C  0E00               	movlw	0
  2335  007D7E  6E15               	movwf	(___llmod@divisor+3)^0,c
  2336  007D80  C02F  F00E         	movff	_contador,___llmod@dividend
  2337  007D84  C030  F00F         	movff	_contador+1,___llmod@dividend+1
  2338  007D88  C031  F010         	movff	_contador+2,___llmod@dividend+2
  2339  007D8C  C032  F011         	movff	_contador+3,___llmod@dividend+3
  2340  007D90  EC48  F039         	call	___llmod	;wreg free
  2341  007D94  C00E  F023         	movff	?___llmod,_tempo$885
  2342  007D98  C00F  F024         	movff	?___llmod+1,_tempo$885+1
  2343  007D9C  C010  F025         	movff	?___llmod+2,_tempo$885+2
  2344  007DA0  C011  F026         	movff	?___llmod+3,_tempo$885+3
  2345  007DA4  C023  F00E         	movff	_tempo$885,___llmod@dividend
  2346  007DA8  C024  F00F         	movff	_tempo$885+1,___llmod@dividend+1
  2347  007DAC  C025  F010         	movff	_tempo$885+2,___llmod@dividend+2
  2348  007DB0  C026  F011         	movff	_tempo$885+3,___llmod@dividend+3
  2349  007DB4  0E0A               	movlw	10
  2350  007DB6  6E12               	movwf	___llmod@divisor^0,c
  2351  007DB8  0E00               	movlw	0
  2352  007DBA  6E13               	movwf	(___llmod@divisor+1)^0,c
  2353  007DBC  0E00               	movlw	0
  2354  007DBE  6E14               	movwf	(___llmod@divisor+2)^0,c
  2355  007DC0  0E00               	movlw	0
  2356  007DC2  6E15               	movwf	(___llmod@divisor+3)^0,c
  2357  007DC4  EC48  F039         	call	___llmod	;wreg free
  2358  007DC8  0E79               	movlw	low _valores
  2359  007DCA  240E               	addwf	?___llmod^0,w,c
  2360  007DCC  6EF6               	movwf	tblptrl,c
  2361  007DCE  0E7E               	movlw	high _valores
  2362  007DD0  200F               	addwfc	(?___llmod+1)^0,w,c
  2363  007DD2  6EF7               	movwf	tblptrh,c
  2364  007DD4                     	if	0	;There are less than 3 active tblptr bytes
  2365  007DD4                     	endif
  2366  007DD4  0008               	tblrd		*
  2367  007DD6  CFF5 FF83          	movff	tablat,3971	;volatile
  2368  007DDA                     l1721:
  2369                           
  2370                           ;lavaRapidoHW.c: 76:             (*(volatile __near unsigned char*)0xF80)=0x00;
  2371  007DDA  0E00               	movlw	0
  2372  007DDC  6E80               	movwf	128,c	;volatile
  2373  007DDE                     
  2374                           ;lavaRapidoHW.c: 77:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<i));
  2375  007DDE  C03B  F01B         	movff	_i,??_tempo
  2376  007DE2  0E01               	movlw	1
  2377  007DE4  6E1C               	movwf	(??_tempo+1)^0,c
  2378  007DE6  2A1B               	incf	??_tempo^0,f,c
  2379  007DE8  EFF8  F03E         	goto	u994
  2380  007DEC                     u995:
  2381  007DEC  90D8               	bcf	status,0,c
  2382  007DEE  361C               	rlcf	(??_tempo+1)^0,f,c
  2383  007DF0                     u994:
  2384  007DF0  2E1B               	decfsz	??_tempo^0,f,c
  2385  007DF2  EFF6  F03E         	goto	u995
  2386  007DF6  501C               	movf	(??_tempo+1)^0,w,c
  2387  007DF8  1280               	iorwf	128,f,c	;volatile
  2388  007DFA                     
  2389                           ;lavaRapidoHW.c: 78:             atraso_ms(1);
  2390  007DFA  0E01               	movlw	1
  2391  007DFC  6E01               	movwf	atraso_ms@t^0,c
  2392  007DFE  0E00               	movlw	0
  2393  007E00  6E02               	movwf	(atraso_ms@t+1)^0,c
  2394  007E02  0E00               	movlw	0
  2395  007E04  6E03               	movwf	(atraso_ms@t+2)^0,c
  2396  007E06  0E00               	movlw	0
  2397  007E08  6E04               	movwf	(atraso_ms@t+3)^0,c
  2398  007E0A  ECCD  F038         	call	_atraso_ms	;wreg free
  2399  007E0E                     
  2400                           ;lavaRapidoHW.c: 79:         }
  2401  007E0E  2A3B               	incf	_i^0,f,c
  2402  007E10  EFFB  F03D         	goto	l1697
  2403  007E14                     l1731:
  2404                           
  2405                           ;lavaRapidoHW.c: 80:         contador--;
  2406  007E14  062F               	decf	_contador^0,f,c
  2407  007E16  0E00               	movlw	0
  2408  007E18  5A30               	subwfb	(_contador+1)^0,f,c
  2409  007E1A  5A31               	subwfb	(_contador+2)^0,f,c
  2410  007E1C  5A32               	subwfb	(_contador+3)^0,f,c
  2411  007E1E                     
  2412                           ;lavaRapidoHW.c: 81:         if(contador==fim*60){
  2413  007E1E  C019  F001         	movff	tempo@fim,___wmul@multiplier
  2414  007E22  C01A  F002         	movff	tempo@fim+1,___wmul@multiplier+1
  2415  007E26  0E00               	movlw	0
  2416  007E28  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2417  007E2A  0E3C               	movlw	60
  2418  007E2C  6E03               	movwf	___wmul@multiplicand^0,c
  2419  007E2E  ECA0  F037         	call	___wmul	;wreg free
  2420  007E32  C001  F01B         	movff	?___wmul,??_tempo
  2421  007E36  C002  F01C         	movff	?___wmul+1,??_tempo+1
  2422  007E3A  0E00               	movlw	0
  2423  007E3C  BE1C               	btfsc	(??_tempo+1)^0,7,c
  2424  007E3E  0EFF               	movlw	255
  2425  007E40  6E1D               	movwf	(??_tempo+2)^0,c
  2426  007E42  6E1E               	movwf	(??_tempo+3)^0,c
  2427  007E44  502F               	movf	_contador^0,w,c
  2428  007E46  181B               	xorwf	??_tempo^0,w,c
  2429  007E48  E10D               	bnz	u1001
  2430  007E4A  5030               	movf	(_contador+1)^0,w,c
  2431  007E4C  181C               	xorwf	(??_tempo+1)^0,w,c
  2432  007E4E  E10A               	bnz	u1001
  2433  007E50  5031               	movf	(_contador+2)^0,w,c
  2434  007E52  181D               	xorwf	(??_tempo+2)^0,w,c
  2435  007E54  E107               	bnz	u1001
  2436  007E56  5032               	movf	(_contador+3)^0,w,c
  2437  007E58  181E               	xorwf	(??_tempo+3)^0,w,c
  2438  007E5A  A4D8               	btfss	status,2,c
  2439  007E5C  EF32  F03F         	goto	u1001
  2440  007E60  EF34  F03F         	goto	u1000
  2441  007E64                     u1001:
  2442  007E64  EFF9  F03D         	goto	l1695
  2443  007E68                     u1000:
  2444  007E68                     
  2445                           ;lavaRapidoHW.c: 82:             (*(volatile __near unsigned char*)0xF80)=0x00;
  2446  007E68  0E00               	movlw	0
  2447  007E6A  6E80               	movwf	128,c	;volatile
  2448  007E6C  0012               	return		;funcret
  2449  007E6E                     __end_of_tempo:
  2450                           	opt callstack 0
  2451                           
  2452 ;; *************** function ___wmul *****************
  2453 ;; Defined at:
  2454 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  multiplier      2    0[COMRAM] unsigned int 
  2457 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  product         2    4[COMRAM] unsigned int 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  2    0[COMRAM] unsigned int 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0, prodl, prodh
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2469 ;;      Params:         4       0       0       0       0       0       0
  2470 ;;      Locals:         2       0       0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0
  2472 ;;      Totals:         6       0       0       0       0       0       0
  2473 ;;Total ram usage:        6 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_tempo
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text6
  2483  006F40                     __ptext6:
  2484                           	opt callstack 0
  2485  006F40                     ___wmul:
  2486                           	opt callstack 27
  2487  006F40  5001               	movf	___wmul@multiplier^0,w,c
  2488  006F42  0203               	mulwf	___wmul@multiplicand^0,c
  2489  006F44  CFF3 F005          	movff	prodl,___wmul@product
  2490  006F48  CFF4 F006          	movff	prodh,___wmul@product+1
  2491  006F4C  5001               	movf	___wmul@multiplier^0,w,c
  2492  006F4E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2493  006F50  50F3               	movf	243,w,c
  2494  006F52  2606               	addwf	(___wmul@product+1)^0,f,c
  2495  006F54  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2496  006F56  0203               	mulwf	___wmul@multiplicand^0,c
  2497  006F58  50F3               	movf	243,w,c
  2498  006F5A  2606               	addwf	(___wmul@product+1)^0,f,c
  2499  006F5C  C005  F001         	movff	___wmul@product,?___wmul
  2500  006F60  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2501  006F64  0012               	return		;funcret
  2502  006F66                     __end_of___wmul:
  2503                           	opt callstack 0
  2504                           
  2505 ;; *************** function ___llmod *****************
  2506 ;; Defined at:
  2507 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  dividend        4   13[COMRAM] unsigned long 
  2510 ;;  divisor         4   17[COMRAM] unsigned long 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  counter         1   21[COMRAM] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  4   13[COMRAM] unsigned long 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2522 ;;      Params:         8       0       0       0       0       0       0
  2523 ;;      Locals:         1       0       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0
  2525 ;;      Totals:         9       0       0       0       0       0       0
  2526 ;;Total ram usage:        9 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_tempo
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text7
  2536  007290                     __ptext7:
  2537                           	opt callstack 0
  2538  007290                     ___llmod:
  2539                           	opt callstack 27
  2540  007290  5012               	movf	___llmod@divisor^0,w,c
  2541  007292  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  2542  007294  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  2543  007296  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  2544  007298  B4D8               	btfsc	status,2,c
  2545  00729A  EF51  F039         	goto	u721
  2546  00729E  EF53  F039         	goto	u720
  2547  0072A2                     u721:
  2548  0072A2  EF83  F039         	goto	l648
  2549  0072A6                     u720:
  2550  0072A6  0E01               	movlw	1
  2551  0072A8  6E16               	movwf	___llmod@counter^0,c
  2552  0072AA  EF5D  F039         	goto	l1585
  2553  0072AE                     l1583:
  2554  0072AE  90D8               	bcf	status,0,c
  2555  0072B0  3612               	rlcf	___llmod@divisor^0,f,c
  2556  0072B2  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  2557  0072B4  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  2558  0072B6  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  2559  0072B8  2A16               	incf	___llmod@counter^0,f,c
  2560  0072BA                     l1585:
  2561  0072BA  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  2562  0072BC  EF62  F039         	goto	u731
  2563  0072C0  EF64  F039         	goto	u730
  2564  0072C4                     u731:
  2565  0072C4  EF57  F039         	goto	l1583
  2566  0072C8                     u730:
  2567  0072C8                     l1587:
  2568  0072C8  5012               	movf	___llmod@divisor^0,w,c
  2569  0072CA  5C0E               	subwf	___llmod@dividend^0,w,c
  2570  0072CC  5013               	movf	(___llmod@divisor+1)^0,w,c
  2571  0072CE  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  2572  0072D0  5014               	movf	(___llmod@divisor+2)^0,w,c
  2573  0072D2  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  2574  0072D4  5015               	movf	(___llmod@divisor+3)^0,w,c
  2575  0072D6  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  2576  0072D8  A0D8               	btfss	status,0,c
  2577  0072DA  EF71  F039         	goto	u741
  2578  0072DE  EF73  F039         	goto	u740
  2579  0072E2                     u741:
  2580  0072E2  EF7B  F039         	goto	l1591
  2581  0072E6                     u740:
  2582  0072E6  5012               	movf	___llmod@divisor^0,w,c
  2583  0072E8  5E0E               	subwf	___llmod@dividend^0,f,c
  2584  0072EA  5013               	movf	(___llmod@divisor+1)^0,w,c
  2585  0072EC  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  2586  0072EE  5014               	movf	(___llmod@divisor+2)^0,w,c
  2587  0072F0  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  2588  0072F2  5015               	movf	(___llmod@divisor+3)^0,w,c
  2589  0072F4  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  2590  0072F6                     l1591:
  2591  0072F6  90D8               	bcf	status,0,c
  2592  0072F8  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  2593  0072FA  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  2594  0072FC  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  2595  0072FE  3212               	rrcf	___llmod@divisor^0,f,c
  2596  007300  2E16               	decfsz	___llmod@counter^0,f,c
  2597  007302  EF64  F039         	goto	l1587
  2598  007306                     l648:
  2599  007306  C00E  F00E         	movff	___llmod@dividend,?___llmod
  2600  00730A  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  2601  00730E  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  2602  007312  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  2603  007316  0012               	return		;funcret
  2604  007318                     __end_of___llmod:
  2605                           	opt callstack 0
  2606                           
  2607 ;; *************** function ___lldiv *****************
  2608 ;; Defined at:
  2609 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  dividend        4    0[COMRAM] unsigned long 
  2612 ;;  divisor         4    4[COMRAM] unsigned long 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  quotient        4    8[COMRAM] unsigned long 
  2615 ;;  counter         1   12[COMRAM] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  4    0[COMRAM] unsigned long 
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2625 ;;      Params:         8       0       0       0       0       0       0
  2626 ;;      Locals:         5       0       0       0       0       0       0
  2627 ;;      Temps:          0       0       0       0       0       0       0
  2628 ;;      Totals:        13       0       0       0       0       0       0
  2629 ;;Total ram usage:       13 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_tempo
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text8
  2639  007318                     __ptext8:
  2640                           	opt callstack 0
  2641  007318                     ___lldiv:
  2642                           	opt callstack 27
  2643  007318  0E00               	movlw	0
  2644  00731A  6E09               	movwf	___lldiv@quotient^0,c
  2645  00731C  0E00               	movlw	0
  2646  00731E  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  2647  007320  0E00               	movlw	0
  2648  007322  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  2649  007324  0E00               	movlw	0
  2650  007326  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  2651  007328  5005               	movf	___lldiv@divisor^0,w,c
  2652  00732A  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  2653  00732C  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  2654  00732E  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  2655  007330  B4D8               	btfsc	status,2,c
  2656  007332  EF9D  F039         	goto	u691
  2657  007336  EF9F  F039         	goto	u690
  2658  00733A                     u691:
  2659  00733A  EFD5  F039         	goto	l255
  2660  00733E                     u690:
  2661  00733E  0E01               	movlw	1
  2662  007340  6E0D               	movwf	___lldiv@counter^0,c
  2663  007342  EFA9  F039         	goto	l1565
  2664  007346                     l1563:
  2665  007346  90D8               	bcf	status,0,c
  2666  007348  3605               	rlcf	___lldiv@divisor^0,f,c
  2667  00734A  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  2668  00734C  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  2669  00734E  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  2670  007350  2A0D               	incf	___lldiv@counter^0,f,c
  2671  007352                     l1565:
  2672  007352  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  2673  007354  EFAE  F039         	goto	u701
  2674  007358  EFB0  F039         	goto	u700
  2675  00735C                     u701:
  2676  00735C  EFA3  F039         	goto	l1563
  2677  007360                     u700:
  2678  007360                     l1567:
  2679  007360  90D8               	bcf	status,0,c
  2680  007362  3609               	rlcf	___lldiv@quotient^0,f,c
  2681  007364  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  2682  007366  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  2683  007368  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  2684  00736A  5005               	movf	___lldiv@divisor^0,w,c
  2685  00736C  5C01               	subwf	___lldiv@dividend^0,w,c
  2686  00736E  5006               	movf	(___lldiv@divisor+1)^0,w,c
  2687  007370  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  2688  007372  5007               	movf	(___lldiv@divisor+2)^0,w,c
  2689  007374  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  2690  007376  5008               	movf	(___lldiv@divisor+3)^0,w,c
  2691  007378  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  2692  00737A  A0D8               	btfss	status,0,c
  2693  00737C  EFC2  F039         	goto	u711
  2694  007380  EFC4  F039         	goto	u710
  2695  007384                     u711:
  2696  007384  EFCD  F039         	goto	l1575
  2697  007388                     u710:
  2698  007388  5005               	movf	___lldiv@divisor^0,w,c
  2699  00738A  5E01               	subwf	___lldiv@dividend^0,f,c
  2700  00738C  5006               	movf	(___lldiv@divisor+1)^0,w,c
  2701  00738E  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  2702  007390  5007               	movf	(___lldiv@divisor+2)^0,w,c
  2703  007392  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  2704  007394  5008               	movf	(___lldiv@divisor+3)^0,w,c
  2705  007396  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  2706  007398  8009               	bsf	___lldiv@quotient^0,0,c
  2707  00739A                     l1575:
  2708  00739A  90D8               	bcf	status,0,c
  2709  00739C  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  2710  00739E  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  2711  0073A0  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  2712  0073A2  3205               	rrcf	___lldiv@divisor^0,f,c
  2713  0073A4  2E0D               	decfsz	___lldiv@counter^0,f,c
  2714  0073A6  EFB0  F039         	goto	l1567
  2715  0073AA                     l255:
  2716  0073AA  C009  F001         	movff	___lldiv@quotient,?___lldiv
  2717  0073AE  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2718  0073B2  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2719  0073B6  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2720  0073BA  0012               	return		;funcret
  2721  0073BC                     __end_of___lldiv:
  2722                           	opt callstack 0
  2723                           
  2724 ;; *************** function _intro *****************
  2725 ;; Defined at:
  2726 ;;		line 45 in file "lavaRapidoHW.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;		None
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;		None
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2740 ;;      Params:         0       0       0       0       0       0       0
  2741 ;;      Locals:         0       0       0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0
  2743 ;;      Totals:         0       0       0       0       0       0       0
  2744 ;;Total ram usage:        0 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    3
  2747 ;; This function calls:
  2748 ;;		_lcd_cmd
  2749 ;;		_lcd_str
  2750 ;;		_shift
  2751 ;; This function is called by:
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text9
  2757  007212                     __ptext9:
  2758                           	opt callstack 0
  2759  007212                     _intro:
  2760                           	opt callstack 27
  2761  007212                     
  2762                           ;lavaRapidoHW.c: 46:     lcd_cmd(0x01);
  2763  007212  0E01               	movlw	1
  2764  007214  ECEB  F037         	call	_lcd_cmd
  2765                           
  2766                           ;lavaRapidoHW.c: 47:     lcd_cmd(0x80);
  2767  007218  0E80               	movlw	128
  2768  00721A  ECEB  F037         	call	_lcd_cmd
  2769  00721E                     
  2770                           ;lavaRapidoHW.c: 48:     lcd_str("Lava Rapido Hot");
  2771  00721E  0E76               	movlw	low STR_9
  2772  007220  6E0E               	movwf	lcd_str@str^0,c
  2773  007222  0E7F               	movlw	high STR_9
  2774  007224  6E0F               	movwf	(lcd_str@str+1)^0,c
  2775  007226  EC08  F038         	call	_lcd_str	;wreg free
  2776  00722A                     
  2777                           ;lavaRapidoHW.c: 49:     lcd_cmd(0xC0);
  2778  00722A  0EC0               	movlw	192
  2779  00722C  ECEB  F037         	call	_lcd_cmd
  2780                           
  2781                           ;lavaRapidoHW.c: 50:     lcd_str("     Wheels");
  2782  007230  0EC8               	movlw	low STR_10
  2783  007232  6E0E               	movwf	lcd_str@str^0,c
  2784  007234  0E7F               	movlw	high STR_10
  2785  007236  6E0F               	movwf	(lcd_str@str+1)^0,c
  2786  007238  EC08  F038         	call	_lcd_str	;wreg free
  2787  00723C                     
  2788                           ;lavaRapidoHW.c: 51:     shift(50,0);
  2789  00723C  0E00               	movlw	0
  2790  00723E  6E0F               	movwf	(shift@t+1)^0,c
  2791  007240  0E32               	movlw	50
  2792  007242  6E0E               	movwf	shift@t^0,c
  2793  007244  0E00               	movlw	0
  2794  007246  6E11               	movwf	(shift@op+1)^0,c
  2795  007248  0E00               	movlw	0
  2796  00724A  6E10               	movwf	shift@op^0,c
  2797  00724C  ECDE  F039         	call	_shift	;wreg free
  2798  007250                     
  2799                           ;lavaRapidoHW.c: 53:     lcd_cmd(0x01);
  2800  007250  0E01               	movlw	1
  2801  007252  ECEB  F037         	call	_lcd_cmd
  2802  007256                     
  2803                           ;lavaRapidoHW.c: 54:     lcd_cmd(0x80);
  2804  007256  0E80               	movlw	128
  2805  007258  ECEB  F037         	call	_lcd_cmd
  2806  00725C                     
  2807                           ;lavaRapidoHW.c: 55:     lcd_str("       _/|''|'!_,");
  2808  00725C  0E30               	movlw	low STR_11
  2809  00725E  6E0E               	movwf	lcd_str@str^0,c
  2810  007260  0E7F               	movlw	high STR_11
  2811  007262  6E0F               	movwf	(lcd_str@str+1)^0,c
  2812  007264  EC08  F038         	call	_lcd_str	;wreg free
  2813                           
  2814                           ;lavaRapidoHW.c: 56:     lcd_cmd(0xC0);
  2815  007268  0EC0               	movlw	192
  2816  00726A  ECEB  F037         	call	_lcd_cmd
  2817  00726E                     
  2818                           ;lavaRapidoHW.c: 57:     lcd_str("       `-O---=O-'");
  2819  00726E  0E1E               	movlw	low STR_12
  2820  007270  6E0E               	movwf	lcd_str@str^0,c
  2821  007272  0E7F               	movlw	high STR_12
  2822  007274  6E0F               	movwf	(lcd_str@str+1)^0,c
  2823  007276  EC08  F038         	call	_lcd_str	;wreg free
  2824  00727A                     
  2825                           ;lavaRapidoHW.c: 58:     shift(50,1);
  2826  00727A  0E00               	movlw	0
  2827  00727C  6E0F               	movwf	(shift@t+1)^0,c
  2828  00727E  0E32               	movlw	50
  2829  007280  6E0E               	movwf	shift@t^0,c
  2830  007282  0E00               	movlw	0
  2831  007284  6E11               	movwf	(shift@op+1)^0,c
  2832  007286  0E01               	movlw	1
  2833  007288  6E10               	movwf	shift@op^0,c
  2834  00728A  ECDE  F039         	call	_shift	;wreg free
  2835  00728E  0012               	return		;funcret
  2836  007290                     __end_of_intro:
  2837                           	opt callstack 0
  2838                           
  2839 ;; *************** function _inicializa *****************
  2840 ;; Defined at:
  2841 ;;		line 8 in file "lavaRapidoHW.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;		None
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;		None
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2855 ;;      Params:         0       0       0       0       0       0       0
  2856 ;;      Locals:         0       0       0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0       0       0
  2858 ;;      Totals:         0       0       0       0       0       0       0
  2859 ;;Total ram usage:        0 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    3
  2862 ;; This function calls:
  2863 ;;		_lcd_init
  2864 ;; This function is called by:
  2865 ;;		_main
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text10
  2870  006F1C                     __ptext10:
  2871                           	opt callstack 0
  2872  006F1C                     _inicializa:
  2873                           	opt callstack 27
  2874  006F1C                     
  2875                           ;lavaRapidoHW.c: 9:     (*(volatile __near unsigned char*)0xFC1) = 0x06;
  2876  006F1C  0E06               	movlw	6
  2877  006F1E  6EC1               	movwf	193,c	;volatile
  2878                           
  2879                           ;lavaRapidoHW.c: 10:     (*(volatile __near unsigned char*)0xF93) = 0x01;
  2880  006F20  0E01               	movlw	1
  2881  006F22  6E93               	movwf	147,c	;volatile
  2882                           
  2883                           ;lavaRapidoHW.c: 11:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  2884  006F24  0E00               	movlw	0
  2885  006F26  6E95               	movwf	149,c	;volatile
  2886                           
  2887                           ;lavaRapidoHW.c: 12:     (*(volatile __near unsigned char*)0xF96) = 0x00;
  2888  006F28  0E00               	movlw	0
  2889  006F2A  6E96               	movwf	150,c	;volatile
  2890                           
  2891                           ;lavaRapidoHW.c: 13:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
  2892  006F2C  0EF8               	movlw	248
  2893  006F2E  6E93               	movwf	147,c	;volatile
  2894                           
  2895                           ;lavaRapidoHW.c: 14:     (*(volatile __near unsigned char*)0xF92)=0x00;
  2896  006F30  0E00               	movlw	0
  2897  006F32  6E92               	movwf	146,c	;volatile
  2898                           
  2899                           ;lavaRapidoHW.c: 15:     (*(volatile __near unsigned char*)0xF94)=0x00;
  2900  006F34  0E00               	movlw	0
  2901  006F36  6E94               	movwf	148,c	;volatile
  2902  006F38                     
  2903                           ;lavaRapidoHW.c: 16:     (((*(volatile __near unsigned char*)0xF82)) |= (1<<1));
  2904  006F38  8282               	bsf	130,1,c	;volatile
  2905  006F3A                     
  2906                           ;lavaRapidoHW.c: 17:     lcd_init();
  2907  006F3A  EC93  F038         	call	_lcd_init	;wreg free
  2908  006F3E  0012               	return		;funcret
  2909  006F40                     __end_of_inicializa:
  2910                           	opt callstack 0
  2911                           
  2912 ;; *************** function _lcd_init *****************
  2913 ;; Defined at:
  2914 ;;		line 29 in file "lcd.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2928 ;;      Params:         0       0       0       0       0       0       0
  2929 ;;      Locals:         0       0       0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0
  2931 ;;      Totals:         0       0       0       0       0       0       0
  2932 ;;Total ram usage:        0 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    2
  2935 ;; This function calls:
  2936 ;;		_atraso_ms
  2937 ;;		_lcd_cmd
  2938 ;; This function is called by:
  2939 ;;		_inicializa
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text11
  2944  007126                     __ptext11:
  2945                           	opt callstack 0
  2946  007126                     _lcd_init:
  2947                           	opt callstack 27
  2948  007126                     
  2949                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  2950  007126  9284               	bcf	132,1,c	;volatile
  2951                           
  2952                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  2953  007128  9484               	bcf	132,2,c	;volatile
  2954  00712A                     
  2955                           ;lcd.c: 32:     atraso_ms(20);
  2956  00712A  0E14               	movlw	20
  2957  00712C  6E01               	movwf	atraso_ms@t^0,c
  2958  00712E  0E00               	movlw	0
  2959  007130  6E02               	movwf	(atraso_ms@t+1)^0,c
  2960  007132  0E00               	movlw	0
  2961  007134  6E03               	movwf	(atraso_ms@t+2)^0,c
  2962  007136  0E00               	movlw	0
  2963  007138  6E04               	movwf	(atraso_ms@t+3)^0,c
  2964  00713A  ECCD  F038         	call	_atraso_ms	;wreg free
  2965  00713E                     
  2966                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  2967  00713E  8284               	bsf	132,1,c	;volatile
  2968                           
  2969                           ;lcd.c: 35:     lcd_cmd(0x38);
  2970  007140  0E38               	movlw	56
  2971  007142  ECEB  F037         	call	_lcd_cmd
  2972                           
  2973                           ;lcd.c: 36:     atraso_ms(5);
  2974  007146  0E05               	movlw	5
  2975  007148  6E01               	movwf	atraso_ms@t^0,c
  2976  00714A  0E00               	movlw	0
  2977  00714C  6E02               	movwf	(atraso_ms@t+1)^0,c
  2978  00714E  0E00               	movlw	0
  2979  007150  6E03               	movwf	(atraso_ms@t+2)^0,c
  2980  007152  0E00               	movlw	0
  2981  007154  6E04               	movwf	(atraso_ms@t+3)^0,c
  2982  007156  ECCD  F038         	call	_atraso_ms	;wreg free
  2983                           
  2984                           ;lcd.c: 37:     lcd_cmd(0x38);
  2985  00715A  0E38               	movlw	56
  2986  00715C  ECEB  F037         	call	_lcd_cmd
  2987                           
  2988                           ;lcd.c: 38:     atraso_ms(1);
  2989  007160  0E01               	movlw	1
  2990  007162  6E01               	movwf	atraso_ms@t^0,c
  2991  007164  0E00               	movlw	0
  2992  007166  6E02               	movwf	(atraso_ms@t+1)^0,c
  2993  007168  0E00               	movlw	0
  2994  00716A  6E03               	movwf	(atraso_ms@t+2)^0,c
  2995  00716C  0E00               	movlw	0
  2996  00716E  6E04               	movwf	(atraso_ms@t+3)^0,c
  2997  007170  ECCD  F038         	call	_atraso_ms	;wreg free
  2998                           
  2999                           ;lcd.c: 39:     lcd_cmd(0x38);
  3000  007174  0E38               	movlw	56
  3001  007176  ECEB  F037         	call	_lcd_cmd
  3002                           
  3003                           ;lcd.c: 40:     lcd_cmd(0x08);
  3004  00717A  0E08               	movlw	8
  3005  00717C  ECEB  F037         	call	_lcd_cmd
  3006                           
  3007                           ;lcd.c: 41:     lcd_cmd(0x0F);
  3008  007180  0E0F               	movlw	15
  3009  007182  ECEB  F037         	call	_lcd_cmd
  3010                           
  3011                           ;lcd.c: 42:     lcd_cmd(0x01);
  3012  007186  0E01               	movlw	1
  3013  007188  ECEB  F037         	call	_lcd_cmd
  3014                           
  3015                           ;lcd.c: 43:     lcd_cmd(0x38);
  3016  00718C  0E38               	movlw	56
  3017  00718E  ECEB  F037         	call	_lcd_cmd
  3018                           
  3019                           ;lcd.c: 44:     lcd_cmd(0x80);
  3020  007192  0E80               	movlw	128
  3021  007194  ECEB  F037         	call	_lcd_cmd
  3022  007198  0012               	return		;funcret
  3023  00719A                     __end_of_lcd_init:
  3024                           	opt callstack 0
  3025                           
  3026 ;; *************** function _escolherVeiculo *****************
  3027 ;; Defined at:
  3028 ;;		line 35 in file "lavaRapidoHW.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3042 ;;      Params:         0       0       0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0
  3045 ;;      Totals:         0       0       0       0       0       0       0
  3046 ;;Total ram usage:        0 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    3
  3049 ;; This function calls:
  3050 ;;		_lcd_cmd
  3051 ;;		_lcd_str
  3052 ;;		_shift
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text12
  3059  007060                     __ptext12:
  3060                           	opt callstack 0
  3061  007060                     _escolherVeiculo:
  3062                           	opt callstack 27
  3063  007060                     
  3064                           ;lavaRapidoHW.c: 36:     lcd_cmd(0x01);
  3065  007060  0E01               	movlw	1
  3066  007062  ECEB  F037         	call	_lcd_cmd
  3067  007066                     
  3068                           ;lavaRapidoHW.c: 37:     for(i=0;i<5;i++){
  3069  007066  0E00               	movlw	0
  3070  007068  6E3B               	movwf	_i^0,c
  3071  00706A                     l1895:
  3072  00706A  0E04               	movlw	4
  3073  00706C  643B               	cpfsgt	_i^0,c
  3074  00706E  EF3B  F038         	goto	u1051
  3075  007072  EF3D  F038         	goto	u1050
  3076  007076                     u1051:
  3077  007076  EF3F  F038         	goto	l1899
  3078  00707A                     u1050:
  3079  00707A  EF5E  F038         	goto	l114
  3080  00707E                     l1899:
  3081                           
  3082                           ;lavaRapidoHW.c: 38:         lcd_cmd(0x80);
  3083  00707E  0E80               	movlw	128
  3084  007080  ECEB  F037         	call	_lcd_cmd
  3085  007084                     
  3086                           ;lavaRapidoHW.c: 39:         lcd_str("Escolha seu veiculo");
  3087  007084  0ECF               	movlw	low STR_7
  3088  007086  6E0E               	movwf	lcd_str@str^0,c
  3089  007088  0E7E               	movlw	high STR_7
  3090  00708A  6E0F               	movwf	(lcd_str@str+1)^0,c
  3091  00708C  EC08  F038         	call	_lcd_str	;wreg free
  3092  007090                     
  3093                           ;lavaRapidoHW.c: 40:         lcd_cmd(0xC0);
  3094  007090  0EC0               	movlw	192
  3095  007092  ECEB  F037         	call	_lcd_cmd
  3096                           
  3097                           ;lavaRapidoHW.c: 41:         lcd_str("1-Carro 2-Moto 3-Caminhao");
  3098  007096  0E87               	movlw	low STR_8
  3099  007098  6E0E               	movwf	lcd_str@str^0,c
  3100  00709A  0E7E               	movlw	high STR_8
  3101  00709C  6E0F               	movwf	(lcd_str@str+1)^0,c
  3102  00709E  EC08  F038         	call	_lcd_str	;wreg free
  3103  0070A2                     
  3104                           ;lavaRapidoHW.c: 42:         shift(200,0);
  3105  0070A2  0E00               	movlw	0
  3106  0070A4  6E0F               	movwf	(shift@t+1)^0,c
  3107  0070A6  0EC8               	movlw	200
  3108  0070A8  6E0E               	movwf	shift@t^0,c
  3109  0070AA  0E00               	movlw	0
  3110  0070AC  6E11               	movwf	(shift@op+1)^0,c
  3111  0070AE  0E00               	movlw	0
  3112  0070B0  6E10               	movwf	shift@op^0,c
  3113  0070B2  ECDE  F039         	call	_shift	;wreg free
  3114  0070B6                     
  3115                           ;lavaRapidoHW.c: 43:     }
  3116  0070B6  2A3B               	incf	_i^0,f,c
  3117  0070B8  EF35  F038         	goto	l1895
  3118  0070BC                     l114:
  3119  0070BC  0012               	return		;funcret
  3120  0070BE                     __end_of_escolherVeiculo:
  3121                           	opt callstack 0
  3122                           
  3123 ;; *************** function _shift *****************
  3124 ;; Defined at:
  3125 ;;		line 19 in file "lavaRapidoHW.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  t               2   13[COMRAM] int 
  3128 ;;  op              2   15[COMRAM] int 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3140 ;;      Params:         4       0       0       0       0       0       0
  3141 ;;      Locals:         0       0       0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0
  3143 ;;      Totals:         4       0       0       0       0       0       0
  3144 ;;Total ram usage:        4 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    2
  3147 ;; This function calls:
  3148 ;;		_atraso_ms
  3149 ;;		_lcd_cmd
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;;		_escolherVeiculo
  3153 ;;		_intro
  3154 ;;		_lavandoVeiculo
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text13
  3159  0073BC                     __ptext13:
  3160                           	opt callstack 0
  3161  0073BC                     _shift:
  3162                           	opt callstack 28
  3163  0073BC                     
  3164                           ;lavaRapidoHW.c: 20:     for (i = 0; i < 10; i++) {
  3165  0073BC  0E00               	movlw	0
  3166  0073BE  6E3B               	movwf	_i^0,c
  3167  0073C0                     l1745:
  3168  0073C0  0E09               	movlw	9
  3169  0073C2  643B               	cpfsgt	_i^0,c
  3170  0073C4  EFE6  F039         	goto	u1011
  3171  0073C8  EFE8  F039         	goto	u1010
  3172  0073CC                     u1011:
  3173  0073CC  EFEA  F039         	goto	l1749
  3174  0073D0                     u1010:
  3175  0073D0  EFFB  F039         	goto	l1755
  3176  0073D4                     l1749:
  3177                           
  3178                           ;lavaRapidoHW.c: 21:         atraso_ms(t);
  3179  0073D4  C00E  F001         	movff	shift@t,atraso_ms@t
  3180  0073D8  C00F  F002         	movff	shift@t+1,atraso_ms@t+1
  3181  0073DC  0E00               	movlw	0
  3182  0073DE  BE02               	btfsc	(atraso_ms@t+1)^0,7,c
  3183  0073E0  0EFF               	movlw	-1
  3184  0073E2  6E03               	movwf	(atraso_ms@t+2)^0,c
  3185  0073E4  6E04               	movwf	(atraso_ms@t+3)^0,c
  3186  0073E6  ECCD  F038         	call	_atraso_ms	;wreg free
  3187                           
  3188                           ;lavaRapidoHW.c: 22:         lcd_cmd(0x18);
  3189  0073EA  0E18               	movlw	24
  3190  0073EC  ECEB  F037         	call	_lcd_cmd
  3191  0073F0                     
  3192                           ;lavaRapidoHW.c: 23:     }
  3193  0073F0  2A3B               	incf	_i^0,f,c
  3194  0073F2  EFE0  F039         	goto	l1745
  3195  0073F6                     l1755:
  3196                           
  3197                           ;lavaRapidoHW.c: 24:     for (i = 0; i < 20; i++) {
  3198  0073F6  0E00               	movlw	0
  3199  0073F8  6E3B               	movwf	_i^0,c
  3200  0073FA                     l1757:
  3201  0073FA  0E13               	movlw	19
  3202  0073FC  643B               	cpfsgt	_i^0,c
  3203  0073FE  EF03  F03A         	goto	u1021
  3204  007402  EF05  F03A         	goto	u1020
  3205  007406                     u1021:
  3206  007406  EF07  F03A         	goto	l1761
  3207  00740A                     u1020:
  3208  00740A  EF18  F03A         	goto	l1767
  3209  00740E                     l1761:
  3210                           
  3211                           ;lavaRapidoHW.c: 25:         atraso_ms(t);
  3212  00740E  C00E  F001         	movff	shift@t,atraso_ms@t
  3213  007412  C00F  F002         	movff	shift@t+1,atraso_ms@t+1
  3214  007416  0E00               	movlw	0
  3215  007418  BE02               	btfsc	(atraso_ms@t+1)^0,7,c
  3216  00741A  0EFF               	movlw	-1
  3217  00741C  6E03               	movwf	(atraso_ms@t+2)^0,c
  3218  00741E  6E04               	movwf	(atraso_ms@t+3)^0,c
  3219  007420  ECCD  F038         	call	_atraso_ms	;wreg free
  3220                           
  3221                           ;lavaRapidoHW.c: 26:         lcd_cmd(0x1C);
  3222  007424  0E1C               	movlw	28
  3223  007426  ECEB  F037         	call	_lcd_cmd
  3224  00742A                     
  3225                           ;lavaRapidoHW.c: 27:     }
  3226  00742A  2A3B               	incf	_i^0,f,c
  3227  00742C  EFFD  F039         	goto	l1757
  3228  007430                     l1767:
  3229                           
  3230                           ;lavaRapidoHW.c: 28:     if(op==1) return;
  3231  007430  0410               	decf	shift@op^0,w,c
  3232  007432  1011               	iorwf	(shift@op+1)^0,w,c
  3233  007434  A4D8               	btfss	status,2,c
  3234  007436  EF1F  F03A         	goto	u1031
  3235  00743A  EF21  F03A         	goto	u1030
  3236  00743E                     u1031:
  3237  00743E  EF23  F03A         	goto	l1771
  3238  007442                     u1030:
  3239  007442  EF4A  F03A         	goto	l107
  3240  007446                     l1771:
  3241                           
  3242                           ;lavaRapidoHW.c: 29:     for (i = 0; i < 10; i++) {
  3243  007446  0E00               	movlw	0
  3244  007448  6E3B               	movwf	_i^0,c
  3245  00744A                     l1773:
  3246  00744A  0E09               	movlw	9
  3247  00744C  643B               	cpfsgt	_i^0,c
  3248  00744E  EF2B  F03A         	goto	u1041
  3249  007452  EF2D  F03A         	goto	u1040
  3250  007456                     u1041:
  3251  007456  EF2F  F03A         	goto	l1777
  3252  00745A                     u1040:
  3253  00745A  EF40  F03A         	goto	l1783
  3254  00745E                     l1777:
  3255                           
  3256                           ;lavaRapidoHW.c: 30:         atraso_ms(t);
  3257  00745E  C00E  F001         	movff	shift@t,atraso_ms@t
  3258  007462  C00F  F002         	movff	shift@t+1,atraso_ms@t+1
  3259  007466  0E00               	movlw	0
  3260  007468  BE02               	btfsc	(atraso_ms@t+1)^0,7,c
  3261  00746A  0EFF               	movlw	-1
  3262  00746C  6E03               	movwf	(atraso_ms@t+2)^0,c
  3263  00746E  6E04               	movwf	(atraso_ms@t+3)^0,c
  3264  007470  ECCD  F038         	call	_atraso_ms	;wreg free
  3265                           
  3266                           ;lavaRapidoHW.c: 31:         lcd_cmd(0x18);
  3267  007474  0E18               	movlw	24
  3268  007476  ECEB  F037         	call	_lcd_cmd
  3269  00747A                     
  3270                           ;lavaRapidoHW.c: 32:     }
  3271  00747A  2A3B               	incf	_i^0,f,c
  3272  00747C  EF25  F03A         	goto	l1773
  3273  007480                     l1783:
  3274                           
  3275                           ;lavaRapidoHW.c: 33:     atraso_ms(1000);
  3276  007480  0EE8               	movlw	232
  3277  007482  6E01               	movwf	atraso_ms@t^0,c
  3278  007484  0E03               	movlw	3
  3279  007486  6E02               	movwf	(atraso_ms@t+1)^0,c
  3280  007488  0E00               	movlw	0
  3281  00748A  6E03               	movwf	(atraso_ms@t+2)^0,c
  3282  00748C  0E00               	movlw	0
  3283  00748E  6E04               	movwf	(atraso_ms@t+3)^0,c
  3284  007490  ECCD  F038         	call	_atraso_ms	;wreg free
  3285  007494                     l107:
  3286  007494  0012               	return		;funcret
  3287  007496                     __end_of_shift:
  3288                           	opt callstack 0
  3289                           
  3290 ;; *************** function _lcd_cmd *****************
  3291 ;; Defined at:
  3292 ;;		line 9 in file "lcd.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  val             1    wreg     unsigned char 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  val             1   12[COMRAM] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3306 ;;      Params:         0       0       0       0       0       0       0
  3307 ;;      Locals:         1       0       0       0       0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0
  3309 ;;      Totals:         1       0       0       0       0       0       0
  3310 ;;Total ram usage:        1 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    1
  3313 ;; This function calls:
  3314 ;;		_atraso_ms
  3315 ;;		_lcd_wr
  3316 ;; This function is called by:
  3317 ;;		_lcd_init
  3318 ;;		_main
  3319 ;;		_shift
  3320 ;;		_escolherVeiculo
  3321 ;;		_intro
  3322 ;;		_lavando
  3323 ;;		_lavandoVeiculo
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text14
  3328  006FD6                     __ptext14:
  3329                           	opt callstack 0
  3330  006FD6                     _lcd_cmd:
  3331                           	opt callstack 28
  3332                           
  3333                           ;incstack = 0
  3334                           ;lcd_cmd@val stored from wreg
  3335  006FD6  6E0D               	movwf	lcd_cmd@val^0,c
  3336  006FD8                     
  3337                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3338  006FD8  8284               	bsf	132,1,c	;volatile
  3339  006FDA                     
  3340                           ;lcd.c: 11:     lcd_wr(val);
  3341  006FDA  500D               	movf	lcd_cmd@val^0,w,c
  3342  006FDC  EC7C  F037         	call	_lcd_wr
  3343  006FE0                     
  3344                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  3345  006FE0  9484               	bcf	132,2,c	;volatile
  3346  006FE2                     
  3347                           ;lcd.c: 13:     atraso_ms(3);
  3348  006FE2  0E03               	movlw	3
  3349  006FE4  6E01               	movwf	atraso_ms@t^0,c
  3350  006FE6  0E00               	movlw	0
  3351  006FE8  6E02               	movwf	(atraso_ms@t+1)^0,c
  3352  006FEA  0E00               	movlw	0
  3353  006FEC  6E03               	movwf	(atraso_ms@t+2)^0,c
  3354  006FEE  0E00               	movlw	0
  3355  006FF0  6E04               	movwf	(atraso_ms@t+3)^0,c
  3356  006FF2  ECCD  F038         	call	_atraso_ms	;wreg free
  3357  006FF6                     
  3358                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  3359  006FF6  9284               	bcf	132,1,c	;volatile
  3360  006FF8                     
  3361                           ;lcd.c: 15:     atraso_ms(3);
  3362  006FF8  0E03               	movlw	3
  3363  006FFA  6E01               	movwf	atraso_ms@t^0,c
  3364  006FFC  0E00               	movlw	0
  3365  006FFE  6E02               	movwf	(atraso_ms@t+1)^0,c
  3366  007000  0E00               	movlw	0
  3367  007002  6E03               	movwf	(atraso_ms@t+2)^0,c
  3368  007004  0E00               	movlw	0
  3369  007006  6E04               	movwf	(atraso_ms@t+3)^0,c
  3370  007008  ECCD  F038         	call	_atraso_ms	;wreg free
  3371  00700C                     
  3372                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3373  00700C  8284               	bsf	132,1,c	;volatile
  3374  00700E  0012               	return		;funcret
  3375  007010                     __end_of_lcd_cmd:
  3376                           	opt callstack 0
  3377                           
  3378 ;; *************** function _lcd_str *****************
  3379 ;; Defined at:
  3380 ;;		line 47 in file "lcd.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  str             2   13[COMRAM] PTR const unsigned char 
  3383 ;;		 -> STR_32(15), STR_31(20), STR_30(18), STR_29(19), 
  3384 ;;		 -> STR_28(13), STR_27(12), STR_26(8), STR_25(9), 
  3385 ;;		 -> STR_24(4), STR_23(4), STR_22(11), STR_21(4), 
  3386 ;;		 -> STR_20(4), STR_19(13), STR_18(4), STR_17(4), 
  3387 ;;		 -> STR_16(13), STR_15(16), STR_14(4), STR_13(11), 
  3388 ;;		 -> STR_12(18), STR_11(18), STR_10(12), STR_9(16), 
  3389 ;;		 -> STR_8(26), STR_7(20), STR_6(18), STR_5(21), 
  3390 ;;		 -> STR_4(15), STR_3(15), STR_2(20), STR_1(25), 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  i               1   17[COMRAM] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      void 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3402 ;;      Params:         2       0       0       0       0       0       0
  3403 ;;      Locals:         1       0       0       0       0       0       0
  3404 ;;      Temps:          2       0       0       0       0       0       0
  3405 ;;      Totals:         5       0       0       0       0       0       0
  3406 ;;Total ram usage:        5 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    2
  3409 ;; This function calls:
  3410 ;;		_lcd_dat
  3411 ;; This function is called by:
  3412 ;;		_main
  3413 ;;		_escolherVeiculo
  3414 ;;		_intro
  3415 ;;		_lavando
  3416 ;;		_lavandoVeiculo
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	text15
  3421  007010                     __ptext15:
  3422                           	opt callstack 0
  3423  007010                     _lcd_str:
  3424                           	opt callstack 28
  3425  007010                     
  3426                           ;lcd.c: 48:     unsigned char i = 0;
  3427  007010  0E00               	movlw	0
  3428  007012  6E12               	movwf	lcd_str@i^0,c
  3429                           
  3430                           ;lcd.c: 50:     while (str[i] != 0) {
  3431  007014  EF1B  F038         	goto	l1615
  3432  007018                     l1611:
  3433                           
  3434                           ;lcd.c: 51:         lcd_dat(str[i]);
  3435  007018  5012               	movf	lcd_str@i^0,w,c
  3436  00701A  240E               	addwf	lcd_str@str^0,w,c
  3437  00701C  6E10               	movwf	??_lcd_str^0,c
  3438  00701E  0E00               	movlw	0
  3439  007020  200F               	addwfc	(lcd_str@str+1)^0,w,c
  3440  007022  6E11               	movwf	(??_lcd_str+1)^0,c
  3441  007024  C010  FFF6         	movff	??_lcd_str,tblptrl
  3442  007028  C011  FFF7         	movff	??_lcd_str+1,tblptrh
  3443  00702C                     	if	0	;tblptru may be non-zero
  3444  00702C                     	endif
  3445  00702C                     	if	0	;tblptru may be non-zero
  3446  00702C                     	endif
  3447  00702C  0008               	tblrd		*
  3448  00702E  50F5               	movf	tablat,w,c
  3449  007030  ECCE  F037         	call	_lcd_dat
  3450  007034                     
  3451                           ;lcd.c: 52:         i++;
  3452  007034  2A12               	incf	lcd_str@i^0,f,c
  3453  007036                     l1615:
  3454                           
  3455                           ;lcd.c: 50:     while (str[i] != 0) {
  3456  007036  5012               	movf	lcd_str@i^0,w,c
  3457  007038  240E               	addwf	lcd_str@str^0,w,c
  3458  00703A  6E10               	movwf	??_lcd_str^0,c
  3459  00703C  0E00               	movlw	0
  3460  00703E  200F               	addwfc	(lcd_str@str+1)^0,w,c
  3461  007040  6E11               	movwf	(??_lcd_str+1)^0,c
  3462  007042  C010  FFF6         	movff	??_lcd_str,tblptrl
  3463  007046  C011  FFF7         	movff	??_lcd_str+1,tblptrh
  3464  00704A                     	if	0	;tblptru may be non-zero
  3465  00704A                     	endif
  3466  00704A                     	if	0	;tblptru may be non-zero
  3467  00704A                     	endif
  3468  00704A  0008               	tblrd		*
  3469  00704C  50F5               	movf	tablat,w,c
  3470  00704E  0900               	iorlw	0
  3471  007050  A4D8               	btfss	status,2,c
  3472  007052  EF2D  F038         	goto	u751
  3473  007056  EF2F  F038         	goto	u750
  3474  00705A                     u751:
  3475  00705A  EF0C  F038         	goto	l1611
  3476  00705E                     u750:
  3477  00705E  0012               	return		;funcret
  3478  007060                     __end_of_lcd_str:
  3479                           	opt callstack 0
  3480                           
  3481 ;; *************** function _lcd_dat *****************
  3482 ;; Defined at:
  3483 ;;		line 19 in file "lcd.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  val             1    wreg     unsigned char 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  val             1   12[COMRAM] unsigned char 
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3497 ;;      Params:         0       0       0       0       0       0       0
  3498 ;;      Locals:         1       0       0       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0       0       0
  3500 ;;      Totals:         1       0       0       0       0       0       0
  3501 ;;Total ram usage:        1 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    1
  3504 ;; This function calls:
  3505 ;;		_atraso_ms
  3506 ;;		_lcd_wr
  3507 ;; This function is called by:
  3508 ;;		_lcd_str
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text16
  3513  006F9C                     __ptext16:
  3514                           	opt callstack 0
  3515  006F9C                     _lcd_dat:
  3516                           	opt callstack 28
  3517                           
  3518                           ;incstack = 0
  3519                           ;lcd_dat@val stored from wreg
  3520  006F9C  6E0D               	movwf	lcd_dat@val^0,c
  3521  006F9E                     
  3522                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3523  006F9E  8284               	bsf	132,1,c	;volatile
  3524  006FA0                     
  3525                           ;lcd.c: 21:     lcd_wr(val);
  3526  006FA0  500D               	movf	lcd_dat@val^0,w,c
  3527  006FA2  EC7C  F037         	call	_lcd_wr
  3528  006FA6                     
  3529                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
  3530  006FA6  8484               	bsf	132,2,c	;volatile
  3531  006FA8                     
  3532                           ;lcd.c: 23:     atraso_ms(3);
  3533  006FA8  0E03               	movlw	3
  3534  006FAA  6E01               	movwf	atraso_ms@t^0,c
  3535  006FAC  0E00               	movlw	0
  3536  006FAE  6E02               	movwf	(atraso_ms@t+1)^0,c
  3537  006FB0  0E00               	movlw	0
  3538  006FB2  6E03               	movwf	(atraso_ms@t+2)^0,c
  3539  006FB4  0E00               	movlw	0
  3540  006FB6  6E04               	movwf	(atraso_ms@t+3)^0,c
  3541  006FB8  ECCD  F038         	call	_atraso_ms	;wreg free
  3542  006FBC                     
  3543                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  3544  006FBC  9284               	bcf	132,1,c	;volatile
  3545  006FBE                     
  3546                           ;lcd.c: 25:     atraso_ms(3);
  3547  006FBE  0E03               	movlw	3
  3548  006FC0  6E01               	movwf	atraso_ms@t^0,c
  3549  006FC2  0E00               	movlw	0
  3550  006FC4  6E02               	movwf	(atraso_ms@t+1)^0,c
  3551  006FC6  0E00               	movlw	0
  3552  006FC8  6E03               	movwf	(atraso_ms@t+2)^0,c
  3553  006FCA  0E00               	movlw	0
  3554  006FCC  6E04               	movwf	(atraso_ms@t+3)^0,c
  3555  006FCE  ECCD  F038         	call	_atraso_ms	;wreg free
  3556  006FD2                     
  3557                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3558  006FD2  8284               	bsf	132,1,c	;volatile
  3559  006FD4  0012               	return		;funcret
  3560  006FD6                     __end_of_lcd_dat:
  3561                           	opt callstack 0
  3562                           
  3563 ;; *************** function _lcd_wr *****************
  3564 ;; Defined at:
  3565 ;;		line 5 in file "lcd.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  val             1    wreg     unsigned char 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  val             1    0[COMRAM] unsigned char 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      void 
  3572 ;; Registers used:
  3573 ;;		wreg
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3579 ;;      Params:         0       0       0       0       0       0       0
  3580 ;;      Locals:         1       0       0       0       0       0       0
  3581 ;;      Temps:          0       0       0       0       0       0       0
  3582 ;;      Totals:         1       0       0       0       0       0       0
  3583 ;;Total ram usage:        1 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_lcd_cmd
  3589 ;;		_lcd_dat
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text17
  3594  006EF8                     __ptext17:
  3595                           	opt callstack 0
  3596  006EF8                     _lcd_wr:
  3597                           	opt callstack 28
  3598                           
  3599                           ;incstack = 0
  3600                           ;lcd_wr@val stored from wreg
  3601  006EF8  6E01               	movwf	lcd_wr@val^0,c
  3602  006EFA                     
  3603                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
  3604  006EFA  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  3605  006EFE  0012               	return		;funcret
  3606  006F00                     __end_of_lcd_wr:
  3607                           	opt callstack 0
  3608                           
  3609 ;; *************** function _contagem *****************
  3610 ;; Defined at:
  3611 ;;		line 87 in file "lavaRapidoHW.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  cont            2   12[COMRAM] int 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3625 ;;      Params:         2       0       0       0       0       0       0
  3626 ;;      Locals:         0       0       0       0       0       0       0
  3627 ;;      Temps:          3       0       0       0       0       0       0
  3628 ;;      Totals:         5       0       0       0       0       0       0
  3629 ;;Total ram usage:        5 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    1
  3632 ;; This function calls:
  3633 ;;		_atraso_ms
  3634 ;; This function is called by:
  3635 ;;		_main
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text18
  3640  0070BE                     __ptext18:
  3641                           	opt callstack 0
  3642  0070BE                     _contagem:
  3643                           	opt callstack 29
  3644  0070BE                     
  3645                           ;lavaRapidoHW.c: 88:     (*(volatile __near unsigned char*)0xF93)=0x00;
  3646  0070BE  0E00               	movlw	0
  3647  0070C0  6E93               	movwf	147,c	;volatile
  3648                           
  3649                           ;lavaRapidoHW.c: 89:     (*(volatile __near unsigned char*)0xF81)=0x00;
  3650  0070C2  0E00               	movlw	0
  3651  0070C4  6E81               	movwf	129,c	;volatile
  3652                           
  3653                           ;lavaRapidoHW.c: 90:     for(i=1;i<=cont;i++) (((*(volatile __near unsigned char*)0xF81)
      +                          ) |= (1<<i));
  3654  0070C6  0E01               	movlw	1
  3655  0070C8  6E3B               	movwf	_i^0,c
  3656  0070CA  EF76  F038         	goto	l1971
  3657  0070CE                     l1967:
  3658  0070CE  C03B  F00F         	movff	_i,??_contagem
  3659  0070D2  0E01               	movlw	1
  3660  0070D4  6E10               	movwf	(??_contagem+1)^0,c
  3661  0070D6  2A0F               	incf	??_contagem^0,f,c
  3662  0070D8  EF70  F038         	goto	u1114
  3663  0070DC                     u1115:
  3664  0070DC  90D8               	bcf	status,0,c
  3665  0070DE  3610               	rlcf	(??_contagem+1)^0,f,c
  3666  0070E0                     u1114:
  3667  0070E0  2E0F               	decfsz	??_contagem^0,f,c
  3668  0070E2  EF6E  F038         	goto	u1115
  3669  0070E6  5010               	movf	(??_contagem+1)^0,w,c
  3670  0070E8  1281               	iorwf	129,f,c	;volatile
  3671  0070EA  2A3B               	incf	_i^0,f,c
  3672  0070EC                     l1971:
  3673  0070EC  503B               	movf	_i^0,w,c
  3674  0070EE  6E0F               	movwf	??_contagem^0,c
  3675  0070F0  6A10               	clrf	(??_contagem+1)^0,c
  3676  0070F2  500F               	movf	??_contagem^0,w,c
  3677  0070F4  5C0D               	subwf	contagem@cont^0,w,c
  3678  0070F6  500E               	movf	(contagem@cont+1)^0,w,c
  3679  0070F8  0A80               	xorlw	128
  3680  0070FA  6E11               	movwf	(??_contagem+2)^0,c
  3681  0070FC  5010               	movf	(??_contagem+1)^0,w,c
  3682  0070FE  0A80               	xorlw	128
  3683  007100  5811               	subwfb	(??_contagem+2)^0,w,c
  3684  007102  B0D8               	btfsc	status,0,c
  3685  007104  EF86  F038         	goto	u1121
  3686  007108  EF88  F038         	goto	u1120
  3687  00710C                     u1121:
  3688  00710C  EF67  F038         	goto	l1967
  3689  007110                     u1120:
  3690  007110                     
  3691                           ;lavaRapidoHW.c: 91:     atraso_ms(600);
  3692  007110  0E58               	movlw	88
  3693  007112  6E01               	movwf	atraso_ms@t^0,c
  3694  007114  0E02               	movlw	2
  3695  007116  6E02               	movwf	(atraso_ms@t+1)^0,c
  3696  007118  0E00               	movlw	0
  3697  00711A  6E03               	movwf	(atraso_ms@t+2)^0,c
  3698  00711C  0E00               	movlw	0
  3699  00711E  6E04               	movwf	(atraso_ms@t+3)^0,c
  3700  007120  ECCD  F038         	call	_atraso_ms	;wreg free
  3701  007124  0012               	return		;funcret
  3702  007126                     __end_of_contagem:
  3703                           	opt callstack 0
  3704                           
  3705 ;; *************** function _atraso_ms *****************
  3706 ;; Defined at:
  3707 ;;		line 3 in file "delay.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  t               4    0[COMRAM] unsigned long 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  i               2    8[COMRAM] volatile unsigned int 
  3712 ;;  k               1   11[COMRAM] volatile unsigned char 
  3713 ;;  j               1   10[COMRAM] volatile unsigned char 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      void 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3723 ;;      Params:         4       0       0       0       0       0       0
  3724 ;;      Locals:         4       0       0       0       0       0       0
  3725 ;;      Temps:          4       0       0       0       0       0       0
  3726 ;;      Totals:        12       0       0       0       0       0       0
  3727 ;;Total ram usage:       12 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_lcd_cmd
  3733 ;;		_lcd_dat
  3734 ;;		_lcd_init
  3735 ;;		_main
  3736 ;;		_shift
  3737 ;;		_tempo
  3738 ;;		_contagem
  3739 ;;		_lavando
  3740 ;;		_lavandoVeiculo
  3741 ;;		_tc_tecla
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text19
  3746  00719A                     __ptext19:
  3747                           	opt callstack 0
  3748  00719A                     _atraso_ms:
  3749                           	opt callstack 28
  3750  00719A                     
  3751                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
  3752  00719A  0E00               	movlw	0
  3753  00719C  6E0A               	movwf	(atraso_ms@i+1)^0,c	;volatile
  3754  00719E  0E00               	movlw	0
  3755  0071A0  6E09               	movwf	atraso_ms@i^0,c	;volatile
  3756  0071A2  EFF3  F038         	goto	l1535
  3757  0071A6                     l1513:
  3758                           
  3759                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
  3760  0071A6  0E00               	movlw	0
  3761  0071A8  6E0B               	movwf	atraso_ms@j^0,c	;volatile
  3762  0071AA                     l1515:
  3763  0071AA  0E28               	movlw	40
  3764  0071AC  640B               	cpfsgt	atraso_ms@j^0,c	;volatile
  3765  0071AE  EFDB  F038         	goto	u661
  3766  0071B2  EFDD  F038         	goto	u660
  3767  0071B6                     u661:
  3768  0071B6  EFDF  F038         	goto	l1519
  3769  0071BA                     u660:
  3770  0071BA  EFF1  F038         	goto	l1533
  3771  0071BE                     l1519:
  3772                           
  3773                           ;delay.c: 9:             for (k = 0; k < 3; k++);
  3774  0071BE  0E00               	movlw	0
  3775  0071C0  6E0C               	movwf	atraso_ms@k^0,c	;volatile
  3776  0071C2                     l1521:
  3777  0071C2  0E02               	movlw	2
  3778  0071C4  640C               	cpfsgt	atraso_ms@k^0,c	;volatile
  3779  0071C6  EFE7  F038         	goto	u671
  3780  0071CA  EFE9  F038         	goto	u670
  3781  0071CE                     u671:
  3782  0071CE  EFEB  F038         	goto	l1525
  3783  0071D2                     u670:
  3784  0071D2  EFEE  F038         	goto	l1529
  3785  0071D6                     l1525:
  3786  0071D6  2A0C               	incf	atraso_ms@k^0,f,c	;volatile
  3787  0071D8  EFE1  F038         	goto	l1521
  3788  0071DC                     l1529:
  3789                           
  3790                           ;delay.c: 10:         }
  3791  0071DC  2A0B               	incf	atraso_ms@j^0,f,c	;volatile
  3792  0071DE  EFD5  F038         	goto	l1515
  3793  0071E2                     l1533:
  3794                           
  3795                           ;delay.c: 11:     }
  3796  0071E2  4A09               	infsnz	atraso_ms@i^0,f,c	;volatile
  3797  0071E4  2A0A               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  3798  0071E6                     l1535:
  3799  0071E6  5009               	movf	atraso_ms@i^0,w,c	;volatile
  3800  0071E8  6E05               	movwf	??_atraso_ms^0,c
  3801  0071EA  500A               	movf	(atraso_ms@i+1)^0,w,c	;volatile
  3802  0071EC  6E06               	movwf	(??_atraso_ms+1)^0,c
  3803  0071EE  6A07               	clrf	(??_atraso_ms+2)^0,c
  3804  0071F0  6A08               	clrf	(??_atraso_ms+3)^0,c
  3805  0071F2  5001               	movf	atraso_ms@t^0,w,c
  3806  0071F4  5C05               	subwf	??_atraso_ms^0,w,c
  3807  0071F6  5002               	movf	(atraso_ms@t+1)^0,w,c
  3808  0071F8  5806               	subwfb	(??_atraso_ms+1)^0,w,c
  3809  0071FA  5003               	movf	(atraso_ms@t+2)^0,w,c
  3810  0071FC  5807               	subwfb	(??_atraso_ms+2)^0,w,c
  3811  0071FE  5004               	movf	(atraso_ms@t+3)^0,w,c
  3812  007200  5808               	subwfb	(??_atraso_ms+3)^0,w,c
  3813  007202  A0D8               	btfss	status,0,c
  3814  007204  EF06  F039         	goto	u681
  3815  007208  EF08  F039         	goto	u680
  3816  00720C                     u681:
  3817  00720C  EFD3  F038         	goto	l1513
  3818  007210                     u680:
  3819  007210  0012               	return		;funcret
  3820  007212                     __end_of_atraso_ms:
  3821                           	opt callstack 0
  3822                           
  3823                           	psect	rparam
  3824  0000                     tosu	equ	0xFFF
  3825                           tosh	equ	0xFFE
  3826                           tosl	equ	0xFFD
  3827                           stkptr	equ	0xFFC
  3828                           pclatu	equ	0xFFB
  3829                           pclath	equ	0xFFA
  3830                           pcl	equ	0xFF9
  3831                           tblptru	equ	0xFF8
  3832                           tblptrh	equ	0xFF7
  3833                           tblptrl	equ	0xFF6
  3834                           tablat	equ	0xFF5
  3835                           prodh	equ	0xFF4
  3836                           prodl	equ	0xFF3
  3837                           indf0	equ	0xFEF
  3838                           postinc0	equ	0xFEE
  3839                           postdec0	equ	0xFED
  3840                           preinc0	equ	0xFEC
  3841                           plusw0	equ	0xFEB
  3842                           fsr0h	equ	0xFEA
  3843                           fsr0l	equ	0xFE9
  3844                           wreg	equ	0xFE8
  3845                           indf1	equ	0xFE7
  3846                           postinc1	equ	0xFE6
  3847                           postdec1	equ	0xFE5
  3848                           preinc1	equ	0xFE4
  3849                           plusw1	equ	0xFE3
  3850                           fsr1h	equ	0xFE2
  3851                           fsr1l	equ	0xFE1
  3852                           bsr	equ	0xFE0
  3853                           indf2	equ	0xFDF
  3854                           postinc2	equ	0xFDE
  3855                           postdec2	equ	0xFDD
  3856                           preinc2	equ	0xFDC
  3857                           plusw2	equ	0xFDB
  3858                           fsr2h	equ	0xFDA
  3859                           fsr2l	equ	0xFD9
  3860                           status	equ	0xFD8


Data Sizes:
    Strings     376
    Constant    24
    Data        4
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     46      63
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lavando@veiculo	PTR unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), STR_26(CODE[8]), STR_25(CODE[9]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_32(CODE[15]), STR_31(CODE[20]), STR_30(CODE[18]), STR_29(CODE[19]), 
		 -> STR_28(CODE[13]), STR_27(CODE[12]), STR_26(CODE[8]), STR_25(CODE[9]), 
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_22(CODE[11]), STR_21(CODE[4]), 
		 -> STR_20(CODE[4]), STR_19(CODE[13]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> STR_16(CODE[13]), STR_15(CODE[16]), STR_14(CODE[4]), STR_13(CODE[11]), 
		 -> STR_12(CODE[18]), STR_11(CODE[18]), STR_10(CODE[12]), STR_9(CODE[16]), 
		 -> STR_8(CODE[26]), STR_7(CODE[20]), STR_6(CODE[18]), STR_5(CODE[21]), 
		 -> STR_4(CODE[15]), STR_3(CODE[15]), STR_2(CODE[20]), STR_1(CODE[25]), 


Critical Paths under _main in COMRAM

    _main->_lavandoVeiculo
    _lavandoVeiculo->_lavando
    _leituraTeclado->_tc_tecla
    _tc_tecla->_atraso_ms
    _lavando->_tempo
    _tempo->___llmod
    ___llmod->___lldiv
    _intro->_lcd_str
    _lcd_init->_lcd_cmd
    _escolherVeiculo->_lcd_str
    _shift->_lcd_cmd
    _lcd_cmd->_atraso_ms
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _contagem->_atraso_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   79690
                                             43 COMRAM     3     3      0
                          _atraso_ms
                           _contagem
                    _escolherVeiculo
                         _inicializa
                              _intro
                     _lavandoVeiculo
                            _lcd_cmd
                            _lcd_str
                     _leituraTeclado
                              _shift
 ---------------------------------------------------------------------------------
 (1) _lavandoVeiculo                                       3     1      2   31216
                                             40 COMRAM     3     1      2
                          _atraso_ms
                            _lavando
                            _lcd_cmd
                            _lcd_str
                     _leituraTeclado
                              _shift
 ---------------------------------------------------------------------------------
 (1) _leituraTeclado                                       1     1      0    2577
                                             19 COMRAM     1     1      0
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (2) _tc_tecla                                             7     5      2    2554
                                             12 COMRAM     7     5      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (2) _lavando                                              2     0      2   14142
                                             38 COMRAM     2     0      2
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
                              _tempo
 ---------------------------------------------------------------------------------
 (3) _tempo                                               16    12      4    4812
                                             22 COMRAM    16    12      4
                            ___lldiv
                            ___llmod
                             ___wmul
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     770
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _intro                                                0     0      0   12317
                            _lcd_cmd
                            _lcd_str
                              _shift
 ---------------------------------------------------------------------------------
 (1) _inicializa                                           0     0      0    4265
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             0     0      0    4265
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _escolherVeiculo                                      0     0      0   12317
                            _lcd_cmd
                            _lcd_str
                              _shift
 ---------------------------------------------------------------------------------
 (1) _shift                                                4     0      4    5417
                                             13 COMRAM     4     0      4
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    2151
                                             12 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2    4749
                                             13 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0    2151
                                             12 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _contagem                                             5     3      2    2212
                                             12 COMRAM     5     3      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                           12     8      4    2114
                                              0 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _contagem
     _atraso_ms
   _escolherVeiculo
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _shift
       _atraso_ms
       _lcd_cmd
         _atraso_ms
         _lcd_wr
   _inicializa
     _lcd_init
       _atraso_ms
       _lcd_cmd
         _atraso_ms
         _lcd_wr
   _intro
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _shift
       _atraso_ms
       _lcd_cmd
         _atraso_ms
         _lcd_wr
   _lavandoVeiculo
     _atraso_ms
     _lavando
       _atraso_ms
       _lcd_cmd
         _atraso_ms
         _lcd_wr
       _lcd_str
         _lcd_dat
           _atraso_ms
           _lcd_wr
       _tempo
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _leituraTeclado
       _tc_tecla
         _atraso_ms
     _shift
       _atraso_ms
       _lcd_cmd
         _atraso_ms
         _lcd_wr
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _leituraTeclado
     _tc_tecla
       _atraso_ms
   _shift
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2E      3F       1       49.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      15        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jul 07 18:02:49 2020

                       l5 6EFE                         l8 700E                         _i 003B  
                       _j 003A                        l11 6FD4                        l20 705E  
                      l30 7210                        l14 7198                        l56 7A6C  
                      l73 7BC0                        l74 7BC0                        l99 6F3E  
                      _v0 0038                        _v1 0037                        _v2 0036  
                      _v3 0035       ___wmul@multiplicand 0003               __CFG_OSC$HS 000000  
                     l200 77E6                       l120 6F1A                       l114 70BC  
                     l210 7874                       l107 7494                       l203 7844  
                     l117 728E                       l133 7E6C                       l205 782C  
                     l142 7788                       l150 75C0                       l215 78BC  
                     l151 75C8                       l208 788C                       l225 797A  
                     l139 7124                       l228 6F64                       l262 73BA  
                     l255 73AA                       l198 77FC                       l901 6EFA  
                     l655 7316                       l648 7306                       u700 7360  
                     u701 735C                       u710 7388                       u711 7384  
                     u720 72A6                       u800 782C                       u721 72A2  
                     u801 7828                       u730 72C8                       u810 783A  
                     u731 72C4                       u811 7836                       u660 71BA  
                     u740 72E6                       u900 793C                       u820 7852  
                     u661 71B6                       u741 72E2                       u901 7938  
                     u821 784E                       u670 71D2                       u750 705E  
                     u910 794C                       u830 7874                       u671 71CE  
                     u751 705A                       u911 7948                       u831 7870  
                     u680 7210                       u920 795C                       u840 7882  
                     u760 77C4                       u681 720C                       u921 7958  
                     u841 787E                       u761 77C0                       u690 733E  
                     u930 7970                       u850 789A                       u770 77E6  
                     u691 733A                       u931 796C                       u851 7896  
                     u771 77E2                       u940 7C06                       u860 78BC  
                     u780 77F4                       u941 7C02                       u861 78B8  
                     u781 77F0                       u950 7C1C                       u870 78CA  
                     u790 780A                       u951 7C18                       u871 78C6  
                     u791 7806                       u960 7C98                       u880 78F8  
                     u961 7C94                       u881 78F4                       u970 7D04  
                     u890 792A                       u971 7D00                       u891 7926  
                     u980 7D70                       u981 7D6C                       u994 7DF0  
                     u995 7DEC                       wreg 000FE8  __size_of_escolherVeiculo 005E  
            __CFG_LVP$OFF 000000              __CFG_WDT$OFF 000000                      l2001 7A14  
                    l2011 7A56                      l2003 7A28                      l2021 7AAC  
                    l2005 7A2E                      l2013 7A6C                      l2031 7AEA  
                    l2023 7AB2                      l2015 7A76                      l2041 7B36  
                    l2033 7AFC                      l2025 7ABE                      l2017 7A88  
                    l2009 7A44                      l2051 7B74                      l2043 7B42  
                    l2035 7B0E                      l2027 7AD2                      l2019 7A9A  
                    l2053 7B80                      l2037 7B20                      l2029 7AD8  
                    l1511 719A                      l2055 7B92                      l2047 7B62  
                    l2039 7B28                      l1521 71C2                      l1513 71A6  
                    l1601 6FE2                      l2057 7BA6                      l2049 7B68  
                    l1515 71AA                      l1611 7018                      l1603 6FF6  
                    l2059 7BBA                      l1525 71D6                      l1533 71E2  
                    l1541 6FA6                      l1613 7034                      l1605 6FF8  
                    l1701 7C0A                      l1621 779E                      l1519 71BE  
                    l1535 71E6                      l1543 6FA8                      l1615 7036  
                    l1607 700C                      l1551 6F40                      l1711 7CF2  
                    l1703 7C1C                      l1631 77C4                      l1529 71DC  
                    l1545 6FBC                      l1537 6F9E                      l1609 7010  
                    l1561 733E                      l1553 6F5C                      l1721 7DDA  
                    l1713 7D04                      l1705 7C50                      l1801 7600  
                    l1641 781E                      l1633 77D8                      l1617 778A  
                    l1547 6FBE                      l1539 6FA0                      l1571 7388  
                    l1563 7346                      l1723 7DDE                      l1715 7D5E  
                    l1707 7C86                      l1731 7E14                      l1811 764C  
                    l1803 7614                      l1627 77A2                      l1619 7796  
                    l1549 6FD2                      l1901 7084                      l1741 713E  
                    l1573 7398                      l1565 7352                      l1557 7318  
                    l1581 72A6                      l1733 7E1E                      l1725 7DFA  
                    l1717 7D70                      l1709 7C98                      l1821 768A  
                    l1813 7652                      l1805 7626                      l1661 78CA  
                    l1653 7882                      l1645 783A                      l1637 77F4  
                    l1629 77B6                      l1751 73F0                      l1743 73BC  
                    l1903 7090                      l1575 739A                      l1567 7360  
                    l1559 7328                      l1591 72F6                      l1583 72AE  
                    l1735 7E68                      l1727 7E0E                      l1719 7DA4  
                    l1831 76C8                      l1823 769E                      l1815 765E  
                    l1807 763A                      l1671 790C                      l1655 789A  
                    l1663 78D4                      l1647 7852                      l1639 780A  
                    l1911 7498                      l1761 740E                      l1745 73C0  
                    l1905 70A2                      l1737 7126                      l1577 73A4  
                    l1569 736A                      l1593 7300                      l1585 72BA  
                    l1841 770E                      l1833 76D4                      l1825 76A4  
                    l1817 766A                      l1809 7640                      l1681 795C  
                    l1665 78E6                      l1657 78AE                      l1649 7866  
                    l1673 7914                      l1921 74CE                      l1913 749C  
                    l1595 6FD8                      l1771 7446                      l1763 742A  
                    l1755 73F6                      l1907 70B6                      l1739 712A  
                    l1587 72C8                      l1579 7290                      l1691 7BC8  
                    l1851 773E                      l1843 7714                      l1835 76E0  
                    l1827 76AA                      l1819 7676                      l1683 795E  
                    l1675 792A                      l1667 78E8                      l1931 74FE  
                    l1923 74DA                      l1915 749E                      l1597 6FDA  
                    l1773 744A                      l1757 73FA                      l1749 73D4  
                    l1589 72E6                      l1693 7BCC                      l1861 777A  
                    l1853 774A                      l1845 7720                      l1837 76F4  
                    l1829 76BC                      l1685 7970                      l1677 793C  
                    l1669 78F8                      l1941 7532                      l1933 750A  
                    l1925 74EC                      l1917 74B0                      l1599 6FE0  
                    l1783 7480                      l1767 7430                      l1871 6F3A  
                    l1695 7BF2                      l1863 7780                      l1855 774C  
                    l1847 7726                      l1839 7708                      l1687 7974  
                    l1679 794C                      l1791 6F18                      l1951 756A  
                    l1943 7538                      l1935 7510                      l1927 74F8  
                    l1919 74BC                      l1777 745E                      l1881 7250  
                    l1873 7212                      l1697 7BF6                      l1865 7782  
                    l1857 7760                      l1849 7732                      l1785 6F00  
                    l1961 75A8                      l1953 7570                      l1945 7544  
                    l1937 751C                      l1929 74FC                      l1971 70EC  
                    l1779 747A                      l1891 7060                      l1867 6F1C  
                    l1883 7256                      l1875 721E                      l1859 7774  
                    l1795 75CA                      l1787 6F04                      l1963 75AE  
                    l1955 7582                      l1947 754A                      l1939 7530  
                    l1973 7110                      l1965 70BE                      l1893 7066  
                    l1869 6F38                      l1885 725C                      l1877 722A  
                    l1797 75D6                      l1789 6F14                      l1957 7588  
                    l1949 7556                      l1981 7986                      l1967 70CE  
                    l1895 706A                      l1887 726E                      l1879 723C  
                    l1799 75E2                      l1959 7594                      l1991 79D8  
                    l1983 798C                      l1975 797C                      l1969 70EA  
                    l1889 727A                      l1993 79DE                      l1985 79A6  
                    l1977 7980                      l1899 707E                      l1995 79F0  
                    l1987 79B2                      l1979 7984                      l1997 7A02  
                    l1989 79B8                      l1999 7A08                      STR_1 7EA1  
                    STR_2 7EF7                      STR_3 7F86                      STR_4 7F86  
                    STR_5 7EBA                      STR_6 7F54                      STR_7 7ECF  
                    STR_8 7E87                      STR_9 7F76                      u1000 7E68  
                    u1001 7E64                      u1010 73D0                      u1011 73CC  
                    u1020 740A                      u1100 75C0                      u1021 7406  
                    u1101 75BC                      u1030 7442                      u1031 743E  
                    u1120 7110                      u1040 745A                      u1200 7A9A  
                    u1121 710C                      u1041 7456                      u1201 7A96  
                    u1114 70E0                      u1050 707A                      u1210 7AAC  
                    u1130 79A6                      u1115 70DC                      u1051 7076  
                    u1211 7AA8                      u1131 79A2                      u1060 74B0  
                    u1220 7AEA                      u1140 79F0                      u1061 74AC  
                    u1221 7AE6                      u1141 79EC                      u1070 74CE  
                    u1230 7AFC                      u1150 7A02                      u1071 74CA  
                    u1231 7AF8                      u1151 79FE                      u1080 74EC  
                    u1240 7B0E                      u1160 7A40                      u1081 74E8  
                    u1241 7B0A                      u1161 7A3C                      u1090 7582  
                    u1250 7B20                      u1170 7A56                      u1091 757E  
                    u1251 7B1C                      u1171 7A52                      u1260 7B5E  
                    u1180 7A68                      u1261 7B5A                      u1181 7A64  
                    u1190 7A88                      u1191 7A84              __CFG_WDTPS$1 000000  
                    _cont 0033                      _main 797C                      fsr1l 000FE1  
                    prodh 000FF4                      prodl 000FF3                      start 0000  
            ___param_bank 000000                     ?_main 0001                     STR_10 7FC8  
                   STR_11 7F30                     STR_20 7FFB                     STR_12 7F1E  
                   STR_21 7F72                     STR_13 7FDF                     STR_14 7FFB  
                   STR_22 7FD4                     STR_30 7F42                     STR_23 7FFB  
                   STR_15 7F66                     STR_31 7EE3                     STR_24 7F72  
                   STR_32 7F86                     STR_16 7F95                     STR_17 7FFB  
                   STR_25 7FEA                     STR_18 7F72                     STR_26 7FF3  
                   STR_27 7FBC                     STR_19 7FA2                     STR_28 7FAF  
                   STR_29 7F0B           __end_of___lldiv 73BC           __end_of___llmod 7318  
          __CFG_DEBUG$OFF 000000           __end_of_lcd_dat 6FD6           __end_of_lcd_cmd 7010  
         __end_of_lcd_str 7060           __end_of_lavando 778A                     _linha 7E83  
                   _intro 7212                     _shift 73BC                     _valor 7E6F  
                   _tempo 7BC8                     tablat 000FF5           __end_of_valores 7E83  
                   status 000FD8           __initialization 6F66              __end_of_main 7BC8  
            contagem@cont 000D   __size_of_lavandoVeiculo 0134                    ??_main 002C  
           __activetblptr 000002           tc_tecla@timeout 000D          ___llmod@dividend 000E  
                  ?_intro 0001                    ?_shift 000E                    ?_tempo 0017  
       ??_escolherVeiculo 0013          __end_of_lcd_init 719A          __end_of_contagem 7126  
                  ___wmul 6F40            lavando@veiculo 0027                 ??___lldiv 0009  
               ??___llmod 0016                    _lcd_wr 6EF8                    _atraso 003C  
                  clear_0 6F8C                 ??_lcd_dat 000D                 ??_lcd_cmd 000D  
        __end_of_tc_tecla 797C                 ??_lcd_str 0010                 ??_lavando 0029  
            __pdataCOMRAM 003C              __mediumconst 7E6E                    shift@t 000E  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
              __accesstop 0080   __end_of__initialization 6F92             ___rparam_used 000001  
          __pcstackCOMRAM 0001             __end_of_linha 7E87             __end_of_intro 7290  
           __end_of_shift 7496             __end_of_valor 7E79             __end_of_tempo 7E6E  
                 ??_intro 0013                   ??_shift 0012                   ??_tempo 001B  
      __size_of_atraso_ms 0078               tc_tecla@ret 0012               tc_tecla@tmp 0011  
                 ?___wmul 0001                   ?_lcd_wr 0001            _lavandoVeiculo 7496  
               ?_lcd_init 0001                 ?_contagem 000D                _atraso_min 003E  
 __size_of_leituraTeclado 001C                 ?_tc_tecla 000D                   __Hparam 0000  
                 __Lparam 0000                _inicializa 6F1C    __end_of_lavandoVeiculo 75CA  
                 ___lldiv 7318           __size_of___wmul 0026                   ___llmod 7290  
       __end_of_atraso_ms 7212           __size_of_lcd_wr 0008                   __pcinit 6F66  
                 __ramtop 0600                   __ptext0 797C                   __ptext1 7496  
                 __ptext2 6F00                   __ptext3 778A                   __ptext4 75CA  
                 __ptext5 7BC8                   __ptext6 6F40                   __ptext7 7290  
                 __ptext8 7318                   __ptext9 7212                   _lcd_dat 6F9C  
                 _lcd_cmd 6FD6                   _display 0039                   _lcd_str 7010  
                 _lavando 75CA           _escolherVeiculo 7060                   _valores 7E79  
                 main@tmp 002E                ??_lcd_init 000E      end_of_initialization 6F92  
              ??_contagem 000F               tempo@inicio 0017             __Lmediumconst 7E6E  
              ??_tc_tecla 000F           ___lldiv@divisor 0005                   shift@op 0010  
         ___lldiv@counter 000D                   postdec1 000FE5                   postinc0 000FEE  
         ?_lavandoVeiculo 0029                lcd_dat@val 000D                lcd_cmd@val 000D  
              lcd_str@str 000E               ?_inicializa 0001   __end_of_escolherVeiculo 70BE  
              atraso_ms@i 0009                atraso_ms@j 000B                atraso_ms@k 000C  
              atraso_ms@t 0001            __end_of___wmul 6F66             __pidataCOMRAM 6EF4  
          __end_of_lcd_wr 6F00       start_initialization 6F66            _leituraTeclado 6F00  
         ___llmod@divisor 0012           ___llmod@counter 0016                  ??___wmul 0005  
                ??_lcd_wr 0001               __pbssCOMRAM 002F       __size_of_inicializa 0024  
  __end_of_leituraTeclado 6F1C         __size_of_lcd_init 0074         __size_of_contagem 0068  
              tc_tecla@to 000F         __size_of_tc_tecla 01F2             __pmediumconst 7E6E  
                ?___lldiv 0001                  ?___llmod 000E          ?_escolherVeiculo 0001  
                ?_lcd_dat 0001                  ?_lcd_cmd 0001                  ?_lcd_str 000E  
               _atraso_ms 719A                  ?_lavando 0027         leituraTeclado@tmp 0014  
          __size_of_intro 007E            __size_of_shift 00DA            __size_of_tempo 02A6  
         ?_leituraTeclado 0001            ___wmul@product 0005                 _tempo$884 001F  
               _tempo$885 0023          ??_lavandoVeiculo 002B         ___wmul@multiplier 0001  
              ?_atraso_ms 0001                 lcd_wr@val 0001                 copy_data0 6F7A  
                __Hrparam 0000              ??_inicializa 000E                  __Lrparam 0000  
        __size_of___lldiv 00A4          __size_of___llmod 0088          __size_of_lcd_dat 003A  
        __size_of_lcd_cmd 003A          __size_of_lcd_str 0050          __size_of_lavando 01C0  
               tc_tecla@i 0013                  __ptext10 6F1C                  __ptext11 7126  
                __ptext12 7060                  __ptext13 73BC                  __ptext14 6FD6  
                __ptext15 7010                  __ptext16 6F9C                  __ptext17 6EF8  
                __ptext18 70BE                  __ptext19 719A        __end_of_inicializa 6F40  
                _lcd_init 7126                  _contagem 70BE                  _contador 002F  
           __size_of_main 024C                  _tc_tecla 778A                  main@cont 002C  
                lcd_str@i 0012               ??_atraso_ms 0005         lavandoVeiculo@tmp 002B  
        ___lldiv@dividend 0001                  tempo@fim 0019          ___lldiv@quotient 0009  
        ??_leituraTeclado 0014  
